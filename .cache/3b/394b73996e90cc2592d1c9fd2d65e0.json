{"id":"qwXy","dependencies":[{"name":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\package.json","includedInParent":true,"mtime":1689961116842},{"name":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1689961114193},{"name":"./engine/input_layer","loc":{"line":10,"column":27,"index":310},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\input_layer.js"},{"name":"./engine/topology","loc":{"line":11,"column":22,"index":356},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js"},{"name":"./exports","loc":{"line":12,"column":22,"index":399},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports.js"},{"name":"./layers/advanced_activations","loc":{"line":13,"column":70,"index":482},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\advanced_activations.js"},{"name":"./layers/convolutional","loc":{"line":14,"column":116,"index":631},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\convolutional.js"},{"name":"./layers/convolutional_depthwise","loc":{"line":15,"column":32,"index":689},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\convolutional_depthwise.js"},{"name":"./layers/convolutional_recurrent","loc":{"line":16,"column":43,"index":768},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\convolutional_recurrent.js"},{"name":"./layers/core","loc":{"line":17,"column":111,"index":915},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\core.js"},{"name":"./layers/embeddings","loc":{"line":18,"column":26,"index":958},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\embeddings.js"},{"name":"./layers/merge","loc":{"line":19,"column":75,"index":1056},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js"},{"name":"./layers/noise","loc":{"line":20,"column":61,"index":1135},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\noise.js"},{"name":"./layers/normalization","loc":{"line":21,"column":55,"index":1208},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\normalization.js"},{"name":"./layers/padding","loc":{"line":22,"column":30,"index":1264},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\padding.js"},{"name":"./layers/pooling","loc":{"line":23,"column":199,"index":1483},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\pooling.js"},{"name":"./layers/recurrent","loc":{"line":24,"column":102,"index":1605},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\recurrent.js"},{"name":"./layers/wrappers","loc":{"line":25,"column":47,"index":1674},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\wrappers.js"},{"name":"./layers/preprocessing/image_preprocessing","loc":{"line":26,"column":26,"index":1721},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\preprocessing\\image_preprocessing.js"},{"name":"./layers/preprocessing/center_crop","loc":{"line":27,"column":27,"index":1794},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\preprocessing\\center_crop.js"},{"name":"./layers/preprocessing/category_encoding","loc":{"line":28,"column":33,"index":1865},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\preprocessing\\category_encoding.js"},{"name":"./layers/preprocessing/image_resizing","loc":{"line":29,"column":25,"index":1934},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\preprocessing\\image_resizing.js"},{"name":"./layers/preprocessing/random_width","loc":{"line":30,"column":28,"index":2003},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_layers.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\preprocessing\\random_width.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),Object.defineProperty(exports,\"Layer\",{enumerable:!0,get:function(){return n.Layer}}),Object.defineProperty(exports,\"RNN\",{enumerable:!0,get:function(){return d.RNN}}),Object.defineProperty(exports,\"RNNCell\",{enumerable:!0,get:function(){return d.RNNCell}}),exports.activation=k,exports.add=Z,exports.alphaDropout=Ge,exports.average=H,exports.averagePooling1d=re,exports.averagePooling2d=ie,exports.averagePooling3d=ae,exports.avgPool1d=oe,exports.avgPool2d=ue,exports.avgPool3d=pe,exports.avgPooling1d=te,exports.avgPooling2d=se,exports.avgPooling3d=le,exports.batchNormalization=$,exports.bidirectional=Me,exports.categoryEncoding=Be,exports.centerCrop=Oe,exports.concatenate=J,exports.conv1d=M,exports.conv2d=h,exports.conv2dTranspose=S,exports.conv3d=A,exports.conv3dTranspose=U,exports.convLstm2d=Ne,exports.convLstm2dCell=Re,exports.cropping2D=T,exports.dense=j,exports.depthwiseConv2d=G,exports.dot=Y,exports.dropout=O,exports.elu=b,exports.embedding=I,exports.flatten=B,exports.gaussianDropout=ze,exports.gaussianNoise=Te,exports.globalAveragePooling1d=ce,exports.globalAveragePooling2d=xe,exports.globalMaxPool2d=exports.globalMaxPool1d=void 0,exports.globalMaxPooling1d=ge,exports.globalMaxPooling2d=de,exports.gru=ve,exports.gruCell=Pe,Object.defineProperty(exports,\"input\",{enumerable:!0,get:function(){return r.input}}),exports.inputLayer=D,exports.layerNormalization=ee,exports.leakyReLU=N,exports.lstm=ye,exports.lstmCell=De,exports.masking=ke,exports.maxPool2d=exports.maxPool1d=void 0,exports.maxPooling1d=fe,exports.maxPooling2d=we,exports.maxPooling3d=me,exports.maximum=K,exports.minimum=Q,exports.multiply=X,exports.permute=F,exports.prelu=R,exports.randomWidth=Ve,exports.reLU=C,exports.repeatVector=V,exports.rescaling=je,exports.reshape=W,exports.resizing=Ee,exports.rnn=qe,exports.separableConv2d=_,exports.simpleRNN=be,exports.simpleRNNCell=Ce,exports.softmax=q,exports.spatialDropout1d=E,exports.stackedRNNCells=Le,exports.thresholdedReLU=L,exports.timeDistributed=he,exports.upSampling2d=z,exports.zeroPadding2d=ne;var e=require(\"./engine/input_layer\"),n=require(\"./engine/topology\"),r=require(\"./exports\"),o=require(\"./layers/advanced_activations\"),t=require(\"./layers/convolutional\"),i=require(\"./layers/convolutional_depthwise\"),u=require(\"./layers/convolutional_recurrent\"),s=require(\"./layers/core\"),a=require(\"./layers/embeddings\"),p=require(\"./layers/merge\"),l=require(\"./layers/noise\"),c=require(\"./layers/normalization\"),x=require(\"./layers/padding\"),g=require(\"./layers/pooling\"),d=require(\"./layers/recurrent\"),f=require(\"./layers/wrappers\"),w=require(\"./layers/preprocessing/image_preprocessing\"),m=require(\"./layers/preprocessing/center_crop\"),v=require(\"./layers/preprocessing/category_encoding\"),P=require(\"./layers/preprocessing/image_resizing\"),y=require(\"./layers/preprocessing/random_width\");function D(n){return new e.InputLayer(n)}function b(e){return new o.ELU(e)}function C(e){return new o.ReLU(e)}function N(e){return new o.LeakyReLU(e)}function R(e){return new o.PReLU(e)}function q(e){return new o.Softmax(e)}function L(e){return new o.ThresholdedReLU(e)}function M(e){return new t.Conv1D(e)}function h(e){return new t.Conv2D(e)}function S(e){return new t.Conv2DTranspose(e)}function A(e){return new t.Conv3D(e)}function U(e){return new t.Conv3DTranspose(e)}function _(e){return new t.SeparableConv2D(e)}function T(e){return new t.Cropping2D(e)}function z(e){return new t.UpSampling2D(e)}function G(e){return new i.DepthwiseConv2D(e)}function k(e){return new s.Activation(e)}function j(e){return new s.Dense(e)}function O(e){return new s.Dropout(e)}function E(e){return new s.SpatialDropout1D(e)}function B(e){return new s.Flatten(e)}function V(e){return new s.RepeatVector(e)}function W(e){return new s.Reshape(e)}function F(e){return new s.Permute(e)}function I(e){return new a.Embedding(e)}function Z(e){return new p.Add(e)}function H(e){return new p.Average(e)}function J(e){return new p.Concatenate(e)}function K(e){return new p.Maximum(e)}function Q(e){return new p.Minimum(e)}function X(e){return new p.Multiply(e)}function Y(e){return new p.Dot(e)}function $(e){return new c.BatchNormalization(e)}function ee(e){return new c.LayerNormalization(e)}function ne(e){return new x.ZeroPadding2D(e)}function re(e){return new g.AveragePooling1D(e)}function oe(e){return re(e)}function te(e){return re(e)}function ie(e){return new g.AveragePooling2D(e)}function ue(e){return ie(e)}function se(e){return ie(e)}function ae(e){return new g.AveragePooling3D(e)}function pe(e){return ae(e)}function le(e){return ae(e)}function ce(e){return new g.GlobalAveragePooling1D(e)}function xe(e){return new g.GlobalAveragePooling2D(e)}function ge(e){return new g.GlobalMaxPooling1D(e)}function de(e){return new g.GlobalMaxPooling2D(e)}function fe(e){return new g.MaxPooling1D(e)}function we(e){return new g.MaxPooling2D(e)}function me(e){return new g.MaxPooling3D(e)}function ve(e){return new d.GRU(e)}function Pe(e){return new d.GRUCell(e)}function ye(e){return new d.LSTM(e)}function De(e){return new d.LSTMCell(e)}function be(e){return new d.SimpleRNN(e)}function Ce(e){return new d.SimpleRNNCell(e)}function Ne(e){return new u.ConvLSTM2D(e)}function Re(e){return new u.ConvLSTM2DCell(e)}function qe(e){return new d.RNN(e)}function Le(e){return new d.StackedRNNCells(e)}function Me(e){return new f.Bidirectional(e)}function he(e){return new f.TimeDistributed(e)}const Se=ge;exports.globalMaxPool1d=Se;const Ae=de;exports.globalMaxPool2d=Ae;const Ue=fe;exports.maxPool1d=Ue;const _e=we;function Te(e){return new l.GaussianNoise(e)}function ze(e){return new l.GaussianDropout(e)}function Ge(e){return new l.AlphaDropout(e)}function ke(e){return new s.Masking(e)}function je(e){return new w.Rescaling(e)}function Oe(e){return new m.CenterCrop(e)}function Ee(e){return new P.Resizing(e)}function Be(e){return new v.CategoryEncoding(e)}function Ve(e){return new y.RandomWidth(e)}exports.maxPool2d=_e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":0}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":13}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":20}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":35}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":43}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":56}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":57}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":64}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":68}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":75}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":90}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":98}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":106}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":107}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":119}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":121}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":125}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":136}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":143}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":145}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":154}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":161}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":176}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":184}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":190}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":191}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":203}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":205}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":209}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":220}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":227}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":229}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":236}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":243}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":258}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":266}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":276}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":277}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":289}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":291}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":295}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":306}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":313}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":315}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":326}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":334}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":345}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":347}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":355}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":359}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":361}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":369}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":382}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":385}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":393}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":401}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":403}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":411}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":428}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":431}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":439}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":456}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":459}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":467}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":484}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":487}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":495}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":505}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":508}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":516}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":526}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":529}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":537}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":547}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":550}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":558}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":571}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":574}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":582}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":595}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":598}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":606}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":619}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":622}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":630}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":649}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":651}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":659}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":673}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":676}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":684}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":701}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":704}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":712}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":723}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":726}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":734}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":746}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":748}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":756}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":763}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":765}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":773}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":780}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":782}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":790}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":806}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":808}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":816}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":823}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":825}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":833}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":849}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":851}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":859}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":870}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":873}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":881}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":896}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":899}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":907}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":918}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":920}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":928}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":934}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":936}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":944}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":960}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":962}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":970}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":974}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":976}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":984}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":992}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":994}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1002}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1006}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1008}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1016}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1026}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1028}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1036}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1044}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1046}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1054}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1070}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1073}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1081}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1095}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1098}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1106}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1129}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1132}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1140}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1163}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1166}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1174}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1190}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1198}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1219}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1221}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1229}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1248}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1251}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1259}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1278}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1281}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1289}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1293}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1296}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1304}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1312}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1315}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1322}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1337}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1345}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1353}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1354}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1366}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1368}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1372}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1383}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1390}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1392}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1401}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1409}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1420}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1422}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1430}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1449}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1452}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1460}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1470}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1472}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1480}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1485}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1488}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1496}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1505}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1508}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1516}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1524}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1527}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1535}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1545}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1553}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1568}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1570}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1578}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1591}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1594}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1602}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1615}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1618}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1626}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1639}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1642}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1650}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1658}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1660}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1668}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1676}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1678}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1686}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1695}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1697}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1705}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1713}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1715}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1723}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1729}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1731}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1739}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1751}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1754}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1762}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1767}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1769}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1777}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1790}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1792}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1800}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1810}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1813}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1821}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1829}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1831}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1839}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1848}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1851}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1859}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1863}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1866}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1874}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1890}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1892}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1900}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1910}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1913}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1921}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1935}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1938}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1946}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1954}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1956}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1964}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1981}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1983}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":1991}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2007}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2010}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2018}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2034}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2036}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2044}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2060}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2063}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2071}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2084}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2086}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2094}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1889,"column":2},"generated":{"line":1,"column":2108}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":2111}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":2115}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":2117}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":2125}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":1,"column":2149}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":1,"column":2151}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":1,"column":2159}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":2180}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":2182}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":2190}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":1,"column":2203}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":1,"column":2205}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":1,"column":2213}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":2246}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":2248}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":2256}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":2282}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":2284}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":2292}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":2328}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":2330}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":2338}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":2374}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":2376}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":2384}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":2401}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":2403}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":2411}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":2434}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":2436}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":2444}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":2462}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":2464}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":2472}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":2490}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":2492}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":2500}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":2526}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":2528}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":2536}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":2556}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":2558}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":2566}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":2586}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":2588}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":2596}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":2618}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":2620}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":2628}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":2649}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":2651}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":2659}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":1,"column":2705}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":1,"column":2707}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":1,"column":2715}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":2753}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":2755}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":2763}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":2807}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":2809}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":2817}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":1,"column":2858}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":1,"column":2860}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":1,"column":2868}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":1,"column":2907}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":1,"column":2916}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":72,"column":27},"generated":{"line":1,"column":2918}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":1,"column":2921}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":1,"column":2928}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":73,"column":13},"generated":{"line":1,"column":2932}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":73,"column":23},"generated":{"line":1,"column":2934}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":1,"column":2945}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":102,"column":6},"generated":{"line":1,"column":2948}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":102,"column":16},"generated":{"line":1,"column":2957}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":102,"column":20},"generated":{"line":1,"column":2959}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":103,"column":2},"generated":{"line":1,"column":2962}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":103,"column":9},"generated":{"line":1,"column":2969}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":103,"column":13},"generated":{"line":1,"column":2973}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":103,"column":16},"generated":{"line":1,"column":2975}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":103,"column":17},"generated":{"line":1,"column":2979}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":1,"column":2982}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":123,"column":16},"generated":{"line":1,"column":2991}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":123,"column":21},"generated":{"line":1,"column":2993}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":124,"column":2},"generated":{"line":1,"column":2996}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":124,"column":9},"generated":{"line":1,"column":3003}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":124,"column":13},"generated":{"line":1,"column":3007}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":124,"column":17},"generated":{"line":1,"column":3009}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":124,"column":18},"generated":{"line":1,"column":3014}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":147,"column":6},"generated":{"line":1,"column":3017}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":147,"column":16},"generated":{"line":1,"column":3026}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":147,"column":26},"generated":{"line":1,"column":3028}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":148,"column":2},"generated":{"line":1,"column":3031}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":148,"column":9},"generated":{"line":1,"column":3038}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":148,"column":13},"generated":{"line":1,"column":3042}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":148,"column":22},"generated":{"line":1,"column":3044}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":148,"column":23},"generated":{"line":1,"column":3054}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":172,"column":6},"generated":{"line":1,"column":3057}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":172,"column":16},"generated":{"line":1,"column":3066}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":172,"column":22},"generated":{"line":1,"column":3068}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":173,"column":2},"generated":{"line":1,"column":3071}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":173,"column":9},"generated":{"line":1,"column":3078}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":173,"column":13},"generated":{"line":1,"column":3082}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":173,"column":18},"generated":{"line":1,"column":3084}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":173,"column":19},"generated":{"line":1,"column":3090}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":192,"column":6},"generated":{"line":1,"column":3093}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":192,"column":16},"generated":{"line":1,"column":3102}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":192,"column":24},"generated":{"line":1,"column":3104}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":193,"column":2},"generated":{"line":1,"column":3107}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":193,"column":9},"generated":{"line":1,"column":3114}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":193,"column":13},"generated":{"line":1,"column":3118}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":193,"column":20},"generated":{"line":1,"column":3120}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":193,"column":21},"generated":{"line":1,"column":3128}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":220,"column":6},"generated":{"line":1,"column":3131}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":220,"column":16},"generated":{"line":1,"column":3140}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":220,"column":32},"generated":{"line":1,"column":3142}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":221,"column":2},"generated":{"line":1,"column":3145}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":221,"column":9},"generated":{"line":1,"column":3152}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":221,"column":13},"generated":{"line":1,"column":3156}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":221,"column":28},"generated":{"line":1,"column":3158}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":221,"column":29},"generated":{"line":1,"column":3174}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":246,"column":6},"generated":{"line":1,"column":3177}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":246,"column":16},"generated":{"line":1,"column":3186}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":246,"column":23},"generated":{"line":1,"column":3188}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":247,"column":2},"generated":{"line":1,"column":3191}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":247,"column":9},"generated":{"line":1,"column":3198}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":247,"column":13},"generated":{"line":1,"column":3202}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":247,"column":19},"generated":{"line":1,"column":3204}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":247,"column":20},"generated":{"line":1,"column":3211}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":268,"column":6},"generated":{"line":1,"column":3214}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":268,"column":16},"generated":{"line":1,"column":3223}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":268,"column":23},"generated":{"line":1,"column":3225}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":269,"column":2},"generated":{"line":1,"column":3228}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":269,"column":9},"generated":{"line":1,"column":3235}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":269,"column":13},"generated":{"line":1,"column":3239}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":269,"column":19},"generated":{"line":1,"column":3241}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":269,"column":20},"generated":{"line":1,"column":3248}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":307,"column":6},"generated":{"line":1,"column":3251}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":307,"column":16},"generated":{"line":1,"column":3260}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":307,"column":32},"generated":{"line":1,"column":3262}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":308,"column":2},"generated":{"line":1,"column":3265}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":308,"column":9},"generated":{"line":1,"column":3272}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":308,"column":13},"generated":{"line":1,"column":3276}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":308,"column":28},"generated":{"line":1,"column":3278}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":308,"column":29},"generated":{"line":1,"column":3294}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":329,"column":6},"generated":{"line":1,"column":3297}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":329,"column":16},"generated":{"line":1,"column":3306}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":329,"column":23},"generated":{"line":1,"column":3308}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":330,"column":2},"generated":{"line":1,"column":3311}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":330,"column":9},"generated":{"line":1,"column":3318}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":330,"column":13},"generated":{"line":1,"column":3322}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":330,"column":19},"generated":{"line":1,"column":3324}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":330,"column":20},"generated":{"line":1,"column":3331}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":1,"column":3334}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":333,"column":16},"generated":{"line":1,"column":3343}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":333,"column":32},"generated":{"line":1,"column":3345}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":334,"column":2},"generated":{"line":1,"column":3348}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":334,"column":9},"generated":{"line":1,"column":3355}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":334,"column":13},"generated":{"line":1,"column":3359}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":334,"column":28},"generated":{"line":1,"column":3361}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":334,"column":29},"generated":{"line":1,"column":3377}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":366,"column":6},"generated":{"line":1,"column":3380}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":366,"column":16},"generated":{"line":1,"column":3389}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":366,"column":32},"generated":{"line":1,"column":3391}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":367,"column":2},"generated":{"line":1,"column":3394}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":367,"column":9},"generated":{"line":1,"column":3401}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":367,"column":13},"generated":{"line":1,"column":3405}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":367,"column":28},"generated":{"line":1,"column":3407}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":367,"column":29},"generated":{"line":1,"column":3423}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":401,"column":6},"generated":{"line":1,"column":3426}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":401,"column":16},"generated":{"line":1,"column":3435}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":401,"column":27},"generated":{"line":1,"column":3437}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":402,"column":2},"generated":{"line":1,"column":3440}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":402,"column":9},"generated":{"line":1,"column":3447}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":402,"column":13},"generated":{"line":1,"column":3451}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":402,"column":23},"generated":{"line":1,"column":3453}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":402,"column":24},"generated":{"line":1,"column":3464}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":429,"column":6},"generated":{"line":1,"column":3467}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":429,"column":16},"generated":{"line":1,"column":3476}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":429,"column":29},"generated":{"line":1,"column":3478}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":430,"column":2},"generated":{"line":1,"column":3481}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":430,"column":9},"generated":{"line":1,"column":3488}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":430,"column":13},"generated":{"line":1,"column":3492}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":430,"column":25},"generated":{"line":1,"column":3494}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":430,"column":26},"generated":{"line":1,"column":3507}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":445,"column":6},"generated":{"line":1,"column":3510}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":445,"column":16},"generated":{"line":1,"column":3519}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":445,"column":32},"generated":{"line":1,"column":3521}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":446,"column":2},"generated":{"line":1,"column":3524}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":446,"column":9},"generated":{"line":1,"column":3531}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":446,"column":13},"generated":{"line":1,"column":3535}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":446,"column":28},"generated":{"line":1,"column":3537}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":446,"column":29},"generated":{"line":1,"column":3553}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":482,"column":6},"generated":{"line":1,"column":3556}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":482,"column":16},"generated":{"line":1,"column":3565}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":482,"column":27},"generated":{"line":1,"column":3567}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":483,"column":2},"generated":{"line":1,"column":3570}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":483,"column":9},"generated":{"line":1,"column":3577}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":483,"column":13},"generated":{"line":1,"column":3581}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":483,"column":23},"generated":{"line":1,"column":3583}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":483,"column":24},"generated":{"line":1,"column":3594}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":519,"column":6},"generated":{"line":1,"column":3597}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":519,"column":16},"generated":{"line":1,"column":3606}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":519,"column":22},"generated":{"line":1,"column":3608}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":520,"column":2},"generated":{"line":1,"column":3611}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":520,"column":9},"generated":{"line":1,"column":3618}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":520,"column":13},"generated":{"line":1,"column":3622}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":520,"column":18},"generated":{"line":1,"column":3624}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":520,"column":19},"generated":{"line":1,"column":3630}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":533,"column":6},"generated":{"line":1,"column":3633}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":533,"column":16},"generated":{"line":1,"column":3642}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":533,"column":24},"generated":{"line":1,"column":3644}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":534,"column":2},"generated":{"line":1,"column":3647}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":534,"column":9},"generated":{"line":1,"column":3654}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":534,"column":13},"generated":{"line":1,"column":3658}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":534,"column":20},"generated":{"line":1,"column":3660}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":534,"column":21},"generated":{"line":1,"column":3668}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":569,"column":6},"generated":{"line":1,"column":3671}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":569,"column":16},"generated":{"line":1,"column":3680}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":569,"column":33},"generated":{"line":1,"column":3682}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":570,"column":2},"generated":{"line":1,"column":3685}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":570,"column":9},"generated":{"line":1,"column":3692}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":570,"column":13},"generated":{"line":1,"column":3696}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":570,"column":29},"generated":{"line":1,"column":3698}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":570,"column":30},"generated":{"line":1,"column":3715}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":592,"column":6},"generated":{"line":1,"column":3718}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":592,"column":16},"generated":{"line":1,"column":3727}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":592,"column":24},"generated":{"line":1,"column":3729}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":593,"column":2},"generated":{"line":1,"column":3732}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":593,"column":9},"generated":{"line":1,"column":3739}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":593,"column":13},"generated":{"line":1,"column":3743}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":593,"column":20},"generated":{"line":1,"column":3745}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":593,"column":21},"generated":{"line":1,"column":3753}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":610,"column":6},"generated":{"line":1,"column":3756}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":610,"column":16},"generated":{"line":1,"column":3765}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":610,"column":29},"generated":{"line":1,"column":3767}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":611,"column":2},"generated":{"line":1,"column":3770}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":611,"column":9},"generated":{"line":1,"column":3777}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":611,"column":13},"generated":{"line":1,"column":3781}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":611,"column":25},"generated":{"line":1,"column":3783}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":611,"column":26},"generated":{"line":1,"column":3796}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":637,"column":6},"generated":{"line":1,"column":3799}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":637,"column":16},"generated":{"line":1,"column":3808}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":637,"column":24},"generated":{"line":1,"column":3810}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":638,"column":2},"generated":{"line":1,"column":3813}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":638,"column":9},"generated":{"line":1,"column":3820}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":638,"column":13},"generated":{"line":1,"column":3824}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":638,"column":20},"generated":{"line":1,"column":3826}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":638,"column":21},"generated":{"line":1,"column":3834}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":669,"column":6},"generated":{"line":1,"column":3837}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":669,"column":16},"generated":{"line":1,"column":3846}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":669,"column":24},"generated":{"line":1,"column":3848}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":670,"column":2},"generated":{"line":1,"column":3851}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":670,"column":9},"generated":{"line":1,"column":3858}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":670,"column":13},"generated":{"line":1,"column":3862}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":670,"column":20},"generated":{"line":1,"column":3864}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":670,"column":21},"generated":{"line":1,"column":3872}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":684,"column":6},"generated":{"line":1,"column":3875}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":684,"column":16},"generated":{"line":1,"column":3884}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":684,"column":26},"generated":{"line":1,"column":3886}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":685,"column":2},"generated":{"line":1,"column":3889}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":685,"column":9},"generated":{"line":1,"column":3896}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":685,"column":13},"generated":{"line":1,"column":3900}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":685,"column":22},"generated":{"line":1,"column":3902}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":685,"column":23},"generated":{"line":1,"column":3912}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":710,"column":6},"generated":{"line":1,"column":3915}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":710,"column":16},"generated":{"line":1,"column":3924}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":710,"column":20},"generated":{"line":1,"column":3926}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":711,"column":2},"generated":{"line":1,"column":3929}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":711,"column":9},"generated":{"line":1,"column":3936}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":711,"column":13},"generated":{"line":1,"column":3940}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":711,"column":16},"generated":{"line":1,"column":3942}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":711,"column":17},"generated":{"line":1,"column":3946}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":732,"column":6},"generated":{"line":1,"column":3949}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":732,"column":16},"generated":{"line":1,"column":3958}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":732,"column":24},"generated":{"line":1,"column":3960}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":733,"column":2},"generated":{"line":1,"column":3963}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":733,"column":9},"generated":{"line":1,"column":3970}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":733,"column":13},"generated":{"line":1,"column":3974}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":733,"column":20},"generated":{"line":1,"column":3976}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":733,"column":21},"generated":{"line":1,"column":3984}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":756,"column":6},"generated":{"line":1,"column":3987}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":756,"column":16},"generated":{"line":1,"column":3996}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":756,"column":28},"generated":{"line":1,"column":3998}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":757,"column":2},"generated":{"line":1,"column":4001}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":757,"column":9},"generated":{"line":1,"column":4008}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":757,"column":13},"generated":{"line":1,"column":4012}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":757,"column":24},"generated":{"line":1,"column":4014}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":757,"column":25},"generated":{"line":1,"column":4026}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":778,"column":6},"generated":{"line":1,"column":4029}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":778,"column":16},"generated":{"line":1,"column":4038}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":778,"column":24},"generated":{"line":1,"column":4040}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":779,"column":2},"generated":{"line":1,"column":4043}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":779,"column":9},"generated":{"line":1,"column":4050}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":779,"column":13},"generated":{"line":1,"column":4054}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":779,"column":20},"generated":{"line":1,"column":4056}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":779,"column":21},"generated":{"line":1,"column":4064}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":800,"column":6},"generated":{"line":1,"column":4067}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":800,"column":16},"generated":{"line":1,"column":4076}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":800,"column":24},"generated":{"line":1,"column":4078}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":801,"column":2},"generated":{"line":1,"column":4081}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":801,"column":9},"generated":{"line":1,"column":4088}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":801,"column":13},"generated":{"line":1,"column":4092}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":801,"column":20},"generated":{"line":1,"column":4094}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":801,"column":21},"generated":{"line":1,"column":4102}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":823,"column":6},"generated":{"line":1,"column":4105}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":823,"column":16},"generated":{"line":1,"column":4114}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":823,"column":25},"generated":{"line":1,"column":4116}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":824,"column":2},"generated":{"line":1,"column":4119}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":824,"column":9},"generated":{"line":1,"column":4126}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":824,"column":13},"generated":{"line":1,"column":4130}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":824,"column":21},"generated":{"line":1,"column":4132}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":824,"column":22},"generated":{"line":1,"column":4141}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":849,"column":6},"generated":{"line":1,"column":4144}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":849,"column":16},"generated":{"line":1,"column":4153}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":849,"column":20},"generated":{"line":1,"column":4155}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":850,"column":2},"generated":{"line":1,"column":4158}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":850,"column":9},"generated":{"line":1,"column":4165}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":850,"column":13},"generated":{"line":1,"column":4169}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":850,"column":16},"generated":{"line":1,"column":4171}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":850,"column":17},"generated":{"line":1,"column":4175}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":876,"column":6},"generated":{"line":1,"column":4178}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":876,"column":16},"generated":{"line":1,"column":4187}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":876,"column":35},"generated":{"line":1,"column":4189}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":877,"column":2},"generated":{"line":1,"column":4192}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":877,"column":9},"generated":{"line":1,"column":4199}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":877,"column":13},"generated":{"line":1,"column":4203}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":877,"column":31},"generated":{"line":1,"column":4205}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":877,"column":32},"generated":{"line":1,"column":4224}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":900,"column":6},"generated":{"line":1,"column":4227}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":900,"column":16},"generated":{"line":1,"column":4236}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":900,"column":35},"generated":{"line":1,"column":4239}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":901,"column":2},"generated":{"line":1,"column":4242}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":901,"column":9},"generated":{"line":1,"column":4249}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":901,"column":13},"generated":{"line":1,"column":4253}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":901,"column":31},"generated":{"line":1,"column":4255}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":901,"column":32},"generated":{"line":1,"column":4274}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":928,"column":6},"generated":{"line":1,"column":4277}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":928,"column":16},"generated":{"line":1,"column":4286}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":928,"column":30},"generated":{"line":1,"column":4289}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":929,"column":2},"generated":{"line":1,"column":4292}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":929,"column":9},"generated":{"line":1,"column":4299}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":929,"column":13},"generated":{"line":1,"column":4303}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":929,"column":26},"generated":{"line":1,"column":4305}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":929,"column":27},"generated":{"line":1,"column":4319}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":945,"column":6},"generated":{"line":1,"column":4322}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":945,"column":16},"generated":{"line":1,"column":4331}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":945,"column":33},"generated":{"line":1,"column":4334}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":946,"column":2},"generated":{"line":1,"column":4337}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":946,"column":9},"generated":{"line":1,"column":4344}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":946,"column":13},"generated":{"line":1,"column":4348}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":946,"column":29},"generated":{"line":1,"column":4350}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":946,"column":30},"generated":{"line":1,"column":4367}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":948,"column":6},"generated":{"line":1,"column":4370}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":948,"column":16},"generated":{"line":1,"column":4379}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":948,"column":26},"generated":{"line":1,"column":4382}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":949,"column":2},"generated":{"line":1,"column":4385}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":949,"column":9},"generated":{"line":1,"column":4392}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":949,"column":26},"generated":{"line":1,"column":4395}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":953,"column":6},"generated":{"line":1,"column":4398}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":953,"column":16},"generated":{"line":1,"column":4407}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":953,"column":29},"generated":{"line":1,"column":4410}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":954,"column":2},"generated":{"line":1,"column":4413}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":954,"column":9},"generated":{"line":1,"column":4420}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":954,"column":26},"generated":{"line":1,"column":4423}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":980,"column":6},"generated":{"line":1,"column":4426}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":980,"column":16},"generated":{"line":1,"column":4435}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":980,"column":33},"generated":{"line":1,"column":4438}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":981,"column":2},"generated":{"line":1,"column":4441}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":981,"column":9},"generated":{"line":1,"column":4448}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":981,"column":13},"generated":{"line":1,"column":4452}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":981,"column":29},"generated":{"line":1,"column":4454}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":981,"column":30},"generated":{"line":1,"column":4471}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":983,"column":6},"generated":{"line":1,"column":4474}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":983,"column":16},"generated":{"line":1,"column":4483}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":983,"column":26},"generated":{"line":1,"column":4486}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":984,"column":2},"generated":{"line":1,"column":4489}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":984,"column":9},"generated":{"line":1,"column":4496}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":984,"column":26},"generated":{"line":1,"column":4499}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":988,"column":6},"generated":{"line":1,"column":4502}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":988,"column":16},"generated":{"line":1,"column":4511}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":988,"column":29},"generated":{"line":1,"column":4514}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":989,"column":2},"generated":{"line":1,"column":4517}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":989,"column":9},"generated":{"line":1,"column":4524}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":989,"column":26},"generated":{"line":1,"column":4527}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1013,"column":6},"generated":{"line":1,"column":4530}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1013,"column":16},"generated":{"line":1,"column":4539}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1013,"column":33},"generated":{"line":1,"column":4542}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1014,"column":2},"generated":{"line":1,"column":4545}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1014,"column":9},"generated":{"line":1,"column":4552}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1014,"column":13},"generated":{"line":1,"column":4556}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1014,"column":29},"generated":{"line":1,"column":4558}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1014,"column":30},"generated":{"line":1,"column":4575}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1016,"column":6},"generated":{"line":1,"column":4578}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1016,"column":16},"generated":{"line":1,"column":4587}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1016,"column":26},"generated":{"line":1,"column":4590}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1017,"column":2},"generated":{"line":1,"column":4593}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1017,"column":9},"generated":{"line":1,"column":4600}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1017,"column":26},"generated":{"line":1,"column":4603}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1021,"column":6},"generated":{"line":1,"column":4606}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1021,"column":16},"generated":{"line":1,"column":4615}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1021,"column":29},"generated":{"line":1,"column":4618}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1022,"column":2},"generated":{"line":1,"column":4621}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1022,"column":9},"generated":{"line":1,"column":4628}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1022,"column":26},"generated":{"line":1,"column":4631}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1034,"column":6},"generated":{"line":1,"column":4634}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1034,"column":16},"generated":{"line":1,"column":4643}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1034,"column":39},"generated":{"line":1,"column":4646}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1035,"column":2},"generated":{"line":1,"column":4649}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1035,"column":9},"generated":{"line":1,"column":4656}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1035,"column":13},"generated":{"line":1,"column":4660}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1035,"column":35},"generated":{"line":1,"column":4662}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1035,"column":36},"generated":{"line":1,"column":4685}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1052,"column":6},"generated":{"line":1,"column":4688}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1052,"column":16},"generated":{"line":1,"column":4697}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1052,"column":39},"generated":{"line":1,"column":4700}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1053,"column":2},"generated":{"line":1,"column":4703}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1053,"column":9},"generated":{"line":1,"column":4710}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1053,"column":13},"generated":{"line":1,"column":4714}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1053,"column":35},"generated":{"line":1,"column":4716}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1053,"column":36},"generated":{"line":1,"column":4739}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1065,"column":6},"generated":{"line":1,"column":4742}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1065,"column":16},"generated":{"line":1,"column":4751}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1065,"column":35},"generated":{"line":1,"column":4754}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1066,"column":2},"generated":{"line":1,"column":4757}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1066,"column":9},"generated":{"line":1,"column":4764}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1066,"column":13},"generated":{"line":1,"column":4768}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1066,"column":31},"generated":{"line":1,"column":4770}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1066,"column":32},"generated":{"line":1,"column":4789}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1083,"column":6},"generated":{"line":1,"column":4792}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1083,"column":16},"generated":{"line":1,"column":4801}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1083,"column":35},"generated":{"line":1,"column":4804}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1084,"column":2},"generated":{"line":1,"column":4807}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1084,"column":9},"generated":{"line":1,"column":4814}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1084,"column":13},"generated":{"line":1,"column":4818}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1084,"column":31},"generated":{"line":1,"column":4820}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1084,"column":32},"generated":{"line":1,"column":4839}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1096,"column":6},"generated":{"line":1,"column":4842}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1096,"column":16},"generated":{"line":1,"column":4851}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1096,"column":29},"generated":{"line":1,"column":4854}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1097,"column":2},"generated":{"line":1,"column":4857}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1097,"column":9},"generated":{"line":1,"column":4864}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1097,"column":13},"generated":{"line":1,"column":4868}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1097,"column":25},"generated":{"line":1,"column":4870}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1097,"column":26},"generated":{"line":1,"column":4883}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1121,"column":6},"generated":{"line":1,"column":4886}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1121,"column":16},"generated":{"line":1,"column":4895}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1121,"column":29},"generated":{"line":1,"column":4898}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1122,"column":2},"generated":{"line":1,"column":4901}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1122,"column":9},"generated":{"line":1,"column":4908}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1122,"column":13},"generated":{"line":1,"column":4912}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1122,"column":25},"generated":{"line":1,"column":4914}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1122,"column":26},"generated":{"line":1,"column":4927}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1146,"column":6},"generated":{"line":1,"column":4930}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1146,"column":16},"generated":{"line":1,"column":4939}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1146,"column":29},"generated":{"line":1,"column":4942}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1147,"column":2},"generated":{"line":1,"column":4945}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1147,"column":9},"generated":{"line":1,"column":4952}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1147,"column":13},"generated":{"line":1,"column":4956}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1147,"column":25},"generated":{"line":1,"column":4958}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1147,"column":26},"generated":{"line":1,"column":4971}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1175,"column":6},"generated":{"line":1,"column":4974}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1175,"column":16},"generated":{"line":1,"column":4983}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1175,"column":20},"generated":{"line":1,"column":4986}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1176,"column":2},"generated":{"line":1,"column":4989}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1176,"column":9},"generated":{"line":1,"column":4996}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1176,"column":13},"generated":{"line":1,"column":5000}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1176,"column":16},"generated":{"line":1,"column":5002}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1176,"column":17},"generated":{"line":1,"column":5006}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1224,"column":6},"generated":{"line":1,"column":5009}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1224,"column":16},"generated":{"line":1,"column":5018}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1224,"column":24},"generated":{"line":1,"column":5021}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1225,"column":2},"generated":{"line":1,"column":5024}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1225,"column":9},"generated":{"line":1,"column":5031}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1225,"column":13},"generated":{"line":1,"column":5035}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1225,"column":20},"generated":{"line":1,"column":5037}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1225,"column":21},"generated":{"line":1,"column":5045}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1251,"column":6},"generated":{"line":1,"column":5048}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1251,"column":16},"generated":{"line":1,"column":5057}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1251,"column":21},"generated":{"line":1,"column":5060}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1252,"column":2},"generated":{"line":1,"column":5063}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1252,"column":9},"generated":{"line":1,"column":5070}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1252,"column":13},"generated":{"line":1,"column":5074}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1252,"column":17},"generated":{"line":1,"column":5076}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1252,"column":18},"generated":{"line":1,"column":5081}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1300,"column":6},"generated":{"line":1,"column":5084}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1300,"column":16},"generated":{"line":1,"column":5093}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1300,"column":25},"generated":{"line":1,"column":5096}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1301,"column":2},"generated":{"line":1,"column":5099}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1301,"column":9},"generated":{"line":1,"column":5106}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1301,"column":13},"generated":{"line":1,"column":5110}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1301,"column":21},"generated":{"line":1,"column":5112}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1301,"column":22},"generated":{"line":1,"column":5121}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1328,"column":6},"generated":{"line":1,"column":5124}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1328,"column":16},"generated":{"line":1,"column":5133}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1328,"column":26},"generated":{"line":1,"column":5136}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1329,"column":2},"generated":{"line":1,"column":5139}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1329,"column":9},"generated":{"line":1,"column":5146}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1329,"column":13},"generated":{"line":1,"column":5150}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1329,"column":22},"generated":{"line":1,"column":5152}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1329,"column":23},"generated":{"line":1,"column":5162}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1377,"column":6},"generated":{"line":1,"column":5165}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1377,"column":16},"generated":{"line":1,"column":5174}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1377,"column":30},"generated":{"line":1,"column":5177}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1378,"column":2},"generated":{"line":1,"column":5180}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1378,"column":9},"generated":{"line":1,"column":5187}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1378,"column":13},"generated":{"line":1,"column":5191}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1378,"column":26},"generated":{"line":1,"column":5193}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1378,"column":27},"generated":{"line":1,"column":5207}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1408,"column":6},"generated":{"line":1,"column":5210}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1408,"column":16},"generated":{"line":1,"column":5219}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1408,"column":27},"generated":{"line":1,"column":5222}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1409,"column":2},"generated":{"line":1,"column":5225}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1409,"column":9},"generated":{"line":1,"column":5232}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1409,"column":13},"generated":{"line":1,"column":5236}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1409,"column":23},"generated":{"line":1,"column":5238}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1409,"column":24},"generated":{"line":1,"column":5249}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1445,"column":6},"generated":{"line":1,"column":5252}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1445,"column":16},"generated":{"line":1,"column":5261}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1445,"column":31},"generated":{"line":1,"column":5264}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1446,"column":2},"generated":{"line":1,"column":5267}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1446,"column":9},"generated":{"line":1,"column":5274}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1446,"column":13},"generated":{"line":1,"column":5278}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1446,"column":27},"generated":{"line":1,"column":5280}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1446,"column":28},"generated":{"line":1,"column":5295}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1509,"column":6},"generated":{"line":1,"column":5298}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1509,"column":16},"generated":{"line":1,"column":5307}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1509,"column":20},"generated":{"line":1,"column":5310}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1510,"column":2},"generated":{"line":1,"column":5313}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1510,"column":9},"generated":{"line":1,"column":5320}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1510,"column":13},"generated":{"line":1,"column":5324}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1510,"column":16},"generated":{"line":1,"column":5326}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1510,"column":17},"generated":{"line":1,"column":5330}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1520,"column":6},"generated":{"line":1,"column":5333}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1520,"column":16},"generated":{"line":1,"column":5342}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1520,"column":32},"generated":{"line":1,"column":5345}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1521,"column":2},"generated":{"line":1,"column":5348}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1521,"column":9},"generated":{"line":1,"column":5355}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1521,"column":13},"generated":{"line":1,"column":5359}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1521,"column":28},"generated":{"line":1,"column":5361}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1521,"column":29},"generated":{"line":1,"column":5377}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1527,"column":6},"generated":{"line":1,"column":5380}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1527,"column":16},"generated":{"line":1,"column":5389}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1527,"column":30},"generated":{"line":1,"column":5392}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1528,"column":2},"generated":{"line":1,"column":5395}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1528,"column":9},"generated":{"line":1,"column":5402}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1528,"column":13},"generated":{"line":1,"column":5406}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1528,"column":26},"generated":{"line":1,"column":5408}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1528,"column":27},"generated":{"line":1,"column":5422}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1577,"column":6},"generated":{"line":1,"column":5425}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1577,"column":16},"generated":{"line":1,"column":5434}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1577,"column":32},"generated":{"line":1,"column":5437}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1578,"column":2},"generated":{"line":1,"column":5440}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1578,"column":9},"generated":{"line":1,"column":5447}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1578,"column":13},"generated":{"line":1,"column":5451}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1578,"column":28},"generated":{"line":1,"column":5453}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1578,"column":29},"generated":{"line":1,"column":5469}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1582,"column":7},"generated":{"line":1,"column":5472}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1582,"column":13},"generated":{"line":1,"column":5478}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1582,"column":31},"generated":{"line":1,"column":5481}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1582,"column":50},"generated":{"line":1,"column":5484}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1582,"column":50},"generated":{"line":1,"column":5492}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1582,"column":50},"generated":{"line":1,"column":5508}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1583,"column":7},"generated":{"line":1,"column":5511}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1583,"column":13},"generated":{"line":1,"column":5517}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1583,"column":31},"generated":{"line":1,"column":5520}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1583,"column":50},"generated":{"line":1,"column":5523}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1583,"column":50},"generated":{"line":1,"column":5531}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1583,"column":50},"generated":{"line":1,"column":5547}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1584,"column":7},"generated":{"line":1,"column":5550}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1584,"column":13},"generated":{"line":1,"column":5556}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1584,"column":25},"generated":{"line":1,"column":5559}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1584,"column":38},"generated":{"line":1,"column":5562}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1584,"column":38},"generated":{"line":1,"column":5570}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1584,"column":38},"generated":{"line":1,"column":5580}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1585,"column":7},"generated":{"line":1,"column":5583}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1585,"column":13},"generated":{"line":1,"column":5589}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1585,"column":25},"generated":{"line":1,"column":5592}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1612,"column":6},"generated":{"line":1,"column":5595}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1612,"column":16},"generated":{"line":1,"column":5604}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1612,"column":30},"generated":{"line":1,"column":5607}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1613,"column":2},"generated":{"line":1,"column":5610}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1613,"column":9},"generated":{"line":1,"column":5617}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1613,"column":13},"generated":{"line":1,"column":5621}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1613,"column":26},"generated":{"line":1,"column":5623}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1613,"column":27},"generated":{"line":1,"column":5637}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1640,"column":6},"generated":{"line":1,"column":5640}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1640,"column":16},"generated":{"line":1,"column":5649}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1640,"column":32},"generated":{"line":1,"column":5652}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1641,"column":2},"generated":{"line":1,"column":5655}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1641,"column":9},"generated":{"line":1,"column":5662}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1641,"column":13},"generated":{"line":1,"column":5666}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1641,"column":28},"generated":{"line":1,"column":5668}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1641,"column":29},"generated":{"line":1,"column":5684}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1675,"column":6},"generated":{"line":1,"column":5687}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1675,"column":16},"generated":{"line":1,"column":5696}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1675,"column":29},"generated":{"line":1,"column":5699}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1676,"column":2},"generated":{"line":1,"column":5702}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1676,"column":9},"generated":{"line":1,"column":5709}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1676,"column":13},"generated":{"line":1,"column":5713}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1676,"column":25},"generated":{"line":1,"column":5715}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1676,"column":26},"generated":{"line":1,"column":5728}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1702,"column":6},"generated":{"line":1,"column":5731}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1702,"column":16},"generated":{"line":1,"column":5740}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1702,"column":24},"generated":{"line":1,"column":5743}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1703,"column":2},"generated":{"line":1,"column":5746}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1703,"column":9},"generated":{"line":1,"column":5753}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1703,"column":13},"generated":{"line":1,"column":5757}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1703,"column":20},"generated":{"line":1,"column":5759}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1703,"column":21},"generated":{"line":1,"column":5767}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1733,"column":6},"generated":{"line":1,"column":5770}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1733,"column":16},"generated":{"line":1,"column":5779}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1733,"column":26},"generated":{"line":1,"column":5782}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1734,"column":2},"generated":{"line":1,"column":5785}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1734,"column":9},"generated":{"line":1,"column":5792}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1734,"column":13},"generated":{"line":1,"column":5796}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1734,"column":22},"generated":{"line":1,"column":5798}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1734,"column":23},"generated":{"line":1,"column":5808}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1766,"column":6},"generated":{"line":1,"column":5811}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1766,"column":16},"generated":{"line":1,"column":5820}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1766,"column":27},"generated":{"line":1,"column":5823}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1767,"column":3},"generated":{"line":1,"column":5826}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1767,"column":10},"generated":{"line":1,"column":5833}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1767,"column":14},"generated":{"line":1,"column":5837}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1767,"column":24},"generated":{"line":1,"column":5839}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1767,"column":25},"generated":{"line":1,"column":5850}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1792,"column":6},"generated":{"line":1,"column":5853}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1792,"column":16},"generated":{"line":1,"column":5862}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1792,"column":25},"generated":{"line":1,"column":5865}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1793,"column":2},"generated":{"line":1,"column":5868}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1793,"column":9},"generated":{"line":1,"column":5875}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1793,"column":13},"generated":{"line":1,"column":5879}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1793,"column":21},"generated":{"line":1,"column":5881}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1793,"column":22},"generated":{"line":1,"column":5890}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1839,"column":6},"generated":{"line":1,"column":5893}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1839,"column":16},"generated":{"line":1,"column":5902}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1839,"column":33},"generated":{"line":1,"column":5905}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1840,"column":2},"generated":{"line":1,"column":5908}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1840,"column":9},"generated":{"line":1,"column":5915}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1840,"column":13},"generated":{"line":1,"column":5919}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1840,"column":29},"generated":{"line":1,"column":5921}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1840,"column":30},"generated":{"line":1,"column":5938}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1887,"column":8},"generated":{"line":1,"column":5941}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1887,"column":18},"generated":{"line":1,"column":5950}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1887,"column":30},"generated":{"line":1,"column":5953}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1888,"column":4},"generated":{"line":1,"column":5956}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1888,"column":11},"generated":{"line":1,"column":5963}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1888,"column":15},"generated":{"line":1,"column":5967}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1888,"column":26},"generated":{"line":1,"column":5969}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1888,"column":27},"generated":{"line":1,"column":5981}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1585,"column":38},"generated":{"line":1,"column":5984}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1585,"column":38},"generated":{"line":1,"column":5992}},{"source":"../../../../../tfjs-layers/src/exports_layers.ts","name":null,"original":{"line":1585,"column":38},"generated":{"line":1,"column":6002}}],"sources":{"../../../../../tfjs-layers/src/exports_layers.ts":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {InputLayer, InputLayerArgs} from './engine/input_layer';\nimport {Layer, LayerArgs} from './engine/topology';\nimport {input} from './exports';\nimport {ELU, ELULayerArgs, LeakyReLU, LeakyReLULayerArgs, PReLU, PReLULayerArgs, ReLU, ReLULayerArgs, Softmax, SoftmaxLayerArgs, ThresholdedReLU, ThresholdedReLULayerArgs} from './layers/advanced_activations';\nimport {Conv1D, Conv2D, Conv2DTranspose, Conv3D, ConvLayerArgs, Cropping2D, Cropping2DLayerArgs, SeparableConv2D, SeparableConvLayerArgs, UpSampling2D, UpSampling2DLayerArgs, Conv3DTranspose} from './layers/convolutional';\nimport {DepthwiseConv2D, DepthwiseConv2DLayerArgs} from './layers/convolutional_depthwise';\nimport {ConvLSTM2D, ConvLSTM2DArgs, ConvLSTM2DCell, ConvLSTM2DCellArgs} from './layers/convolutional_recurrent';\nimport {Activation, ActivationLayerArgs, Dense, DenseLayerArgs, Dropout, DropoutLayerArgs, Flatten, FlattenLayerArgs, Masking, MaskingArgs, Permute, PermuteLayerArgs, RepeatVector, RepeatVectorLayerArgs, Reshape, ReshapeLayerArgs, SpatialDropout1D, SpatialDropout1DLayerConfig} from './layers/core';\nimport {Embedding, EmbeddingLayerArgs} from './layers/embeddings';\nimport {Add, Average, Concatenate, ConcatenateLayerArgs, Dot, DotLayerArgs, Maximum, Minimum, Multiply} from './layers/merge';\nimport {AlphaDropout, AlphaDropoutArgs, GaussianDropout, GaussianDropoutArgs, GaussianNoise, GaussianNoiseArgs} from './layers/noise';\nimport {BatchNormalization, BatchNormalizationLayerArgs, LayerNormalization, LayerNormalizationLayerArgs} from './layers/normalization';\nimport {ZeroPadding2D, ZeroPadding2DLayerArgs} from './layers/padding';\nimport {AveragePooling1D, AveragePooling2D, AveragePooling3D, GlobalAveragePooling1D, GlobalAveragePooling2D, GlobalMaxPooling1D, GlobalMaxPooling2D, GlobalPooling2DLayerArgs, MaxPooling1D, MaxPooling2D, MaxPooling3D, Pooling1DLayerArgs, Pooling2DLayerArgs, Pooling3DLayerArgs} from './layers/pooling';\nimport {GRU, GRUCell, GRUCellLayerArgs, GRULayerArgs, LSTM, LSTMCell, LSTMCellLayerArgs, LSTMLayerArgs, RNN, RNNCell, RNNLayerArgs, SimpleRNN, SimpleRNNCell, SimpleRNNCellLayerArgs, SimpleRNNLayerArgs, StackedRNNCells, StackedRNNCellsArgs} from './layers/recurrent';\nimport {Bidirectional, BidirectionalLayerArgs, TimeDistributed, WrapperLayerArgs} from './layers/wrappers';\nimport {Rescaling, RescalingArgs} from './layers/preprocessing/image_preprocessing';\nimport {CenterCrop, CenterCropArgs} from './layers/preprocessing/center_crop';\nimport {CategoryEncoding, CategoryEncodingArgs} from './layers/preprocessing/category_encoding';\nimport {Resizing, ResizingArgs} from './layers/preprocessing/image_resizing';\nimport {RandomWidth, RandomWidthArgs} from './layers/preprocessing/random_width';\n\n// TODO(cais): Add doc string to all the public static functions in this\n//   class; include exectuable JavaScript code snippets where applicable\n//   (b/74074458).\n\n// Input Layer.\n/**\n * An input layer is an entry point into a `tf.LayersModel`.\n *\n * `InputLayer` is generated automatically for `tf.Sequential` models by\n * specifying the `inputshape` or `batchInputShape` for the first layer.  It\n * should not be specified explicitly. However, it can be useful sometimes,\n * e.g., when constructing a sequential model from a subset of another\n * sequential model's layers. Like the code snippet below shows.\n *\n * ```js\n * // Define a model which simply adds two inputs.\n * const model1 = tf.sequential();\n * model1.add(tf.layers.dense({inputShape: [4], units: 3, activation: 'relu'}));\n * model1.add(tf.layers.dense({units: 1, activation: 'sigmoid'}));\n * model1.summary();\n * model1.predict(tf.zeros([1, 4])).print();\n *\n * // Construct another model, reusing the second layer of `model1` while\n * // not using the first layer of `model1`. Note that you cannot add the second\n * // layer of `model` directly as the first layer of the new sequential model,\n * // because doing so will lead to an error related to the fact that the layer\n * // is not an input layer. Instead, you need to create an `inputLayer` and add\n * // it to the new sequential model before adding the reused layer.\n * const model2 = tf.sequential();\n * // Use an inputShape that matches the input shape of `model1`'s second\n * // layer.\n * model2.add(tf.layers.inputLayer({inputShape: [3]}));\n * model2.add(model1.layers[1]);\n * model2.summary();\n * model2.predict(tf.zeros([1, 3])).print();\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Inputs', namespace: 'layers'}\n */\nexport function inputLayer(args: InputLayerArgs) {\n  return new InputLayer(args);\n}\n\n// Advanced Activation Layers.\n\n/**\n * Exponential Linear Unit (ELU).\n *\n * It follows:\n * `f(x) =  alpha * (exp(x) - 1.) for x < 0`,\n * `f(x) = x for x >= 0`.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * References:\n *   - [Fast and Accurate Deep Network Learning by Exponential Linear Units\n * (ELUs)](https://arxiv.org/abs/1511.07289v1)\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\nexport function elu(args?: ELULayerArgs) {\n  return new ELU(args);\n}\n\n/**\n * Rectified Linear Unit activation function.\n *\n * Input shape:\n *   Arbitrary. Use the config field `inputShape` (Array of integers, does\n *   not include the sample axis) when using this layer as the first layer\n *   in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\nexport function reLU(args?: ReLULayerArgs) {\n  return new ReLU(args);\n}\n\n/**\n * Leaky version of a rectified linear unit.\n *\n * It allows a small gradient when the unit is not active:\n * `f(x) = alpha * x for x < 0.`\n * `f(x) = x for x >= 0.`\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\nexport function leakyReLU(args?: LeakyReLULayerArgs) {\n  return new LeakyReLU(args);\n}\n\n/**\n * Parameterized version of a leaky rectified linear unit.\n *\n * It follows\n * `f(x) = alpha * x for x < 0.`\n * `f(x) = x for x >= 0.`\n * wherein `alpha` is a trainable weight.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\nexport function prelu(args?: PReLULayerArgs) {\n  return new PReLU(args);\n}\n\n/**\n * Softmax activation layer.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\nexport function softmax(args?: SoftmaxLayerArgs) {\n  return new Softmax(args);\n}\n\n/**\n * Thresholded Rectified Linear Unit.\n *\n * It follows:\n * `f(x) = x for x > theta`,\n * `f(x) = 0 otherwise`.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * References:\n *   - [Zero-Bias Autoencoders and the Benefits of Co-Adapting\n * Features](http://arxiv.org/abs/1402.3337)\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\nexport function thresholdedReLU(args?: ThresholdedReLULayerArgs) {\n  return new ThresholdedReLU(args);\n}\n\n// Convolutional Layers.\n\n/**\n * 1D convolution layer (e.g., temporal convolution).\n *\n * This layer creates a convolution kernel that is convolved\n * with the layer input over a single spatial (or temporal) dimension\n * to produce a tensor of outputs.\n *\n * If `use_bias` is True, a bias vector is created and added to the outputs.\n *\n * If `activation` is not `null`, it is applied to the outputs as well.\n *\n * When using this layer as the first layer in a model, provide an\n * `inputShape` argument `Array` or `null`.\n *\n * For example, `inputShape` would be:\n * - `[10, 128]` for sequences of 10 vectors of 128-dimensional vectors\n * - `[null, 128]` for variable-length sequences of 128-dimensional vectors.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional',  namespace: 'layers'}\n */\nexport function conv1d(args: ConvLayerArgs) {\n  return new Conv1D(args);\n}\n\n/**\n * 2D convolution layer (e.g. spatial convolution over images).\n *\n * This layer creates a convolution kernel that is convolved\n * with the layer input to produce a tensor of outputs.\n *\n * If `useBias` is True, a bias vector is created and added to the outputs.\n *\n * If `activation` is not `null`, it is applied to the outputs as well.\n *\n * When using this layer as the first layer in a model,\n * provide the keyword argument `inputShape`\n * (Array of integers, does not include the sample axis),\n * e.g. `inputShape=[128, 128, 3]` for 128x128 RGB pictures\n * in `dataFormat='channelsLast'`.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\nexport function conv2d(args: ConvLayerArgs) {\n  return new Conv2D(args);\n}\n\n/**\n * Transposed convolutional layer (sometimes called Deconvolution).\n *\n * The need for transposed convolutions generally arises\n * from the desire to use a transformation going in the opposite direction of\n * a normal convolution, i.e., from something that has the shape of the output\n * of some convolution to something that has the shape of its input while\n * maintaining a connectivity pattern that is compatible with said\n * convolution.\n *\n * When using this layer as the first layer in a model, provide the\n * configuration `inputShape` (`Array` of integers, does not include the\n * sample axis), e.g., `inputShape: [128, 128, 3]` for 128x128 RGB pictures in\n * `dataFormat: 'channelsLast'`.\n *\n * Input shape:\n *   4D tensor with shape:\n *   `[batch, channels, rows, cols]` if `dataFormat` is `'channelsFirst'`.\n *   or 4D tensor with shape\n *   `[batch, rows, cols, channels]` if `dataFormat` is `'channelsLast'`.\n *\n * Output shape:\n *   4D tensor with shape:\n *   `[batch, filters, newRows, newCols]` if `dataFormat` is\n * `'channelsFirst'`. or 4D tensor with shape:\n *   `[batch, newRows, newCols, filters]` if `dataFormat` is `'channelsLast'`.\n *\n * References:\n *   - [A guide to convolution arithmetic for deep\n * learning](https://arxiv.org/abs/1603.07285v1)\n *   - [Deconvolutional\n * Networks](http://www.matthewzeiler.com/pubs/cvpr2010/cvpr2010.pdf)\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\nexport function conv2dTranspose(args: ConvLayerArgs) {\n  return new Conv2DTranspose(args);\n}\n\n/**\n * 3D convolution layer (e.g. spatial convolution over volumes).\n *\n * This layer creates a convolution kernel that is convolved\n * with the layer input to produce a tensor of outputs.\n *\n * If `useBias` is True, a bias vector is created and added to the outputs.\n *\n * If `activation` is not `null`, it is applied to the outputs as well.\n *\n * When using this layer as the first layer in a model,\n * provide the keyword argument `inputShape`\n * (Array of integers, does not include the sample axis),\n * e.g. `inputShape=[128, 128, 128, 1]` for 128x128x128 grayscale volumes\n * in `dataFormat='channelsLast'`.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\nexport function conv3d(args: ConvLayerArgs) {\n  return new Conv3D(args);\n}\n\nexport function conv3dTranspose(args: ConvLayerArgs): Layer {\n  return new Conv3DTranspose(args);\n}\n\n/**\n * Depthwise separable 2D convolution.\n *\n * Separable convolution consists of first performing\n * a depthwise spatial convolution\n * (which acts on each input channel separately)\n * followed by a pointwise convolution which mixes together the resulting\n * output channels. The `depthMultiplier` argument controls how many\n * output channels are generated per input channel in the depthwise step.\n *\n * Intuitively, separable convolutions can be understood as\n * a way to factorize a convolution kernel into two smaller kernels,\n * or as an extreme version of an Inception block.\n *\n * Input shape:\n *   4D tensor with shape:\n *     `[batch, channels, rows, cols]` if data_format='channelsFirst'\n *   or 4D tensor with shape:\n *     `[batch, rows, cols, channels]` if data_format='channelsLast'.\n *\n * Output shape:\n *   4D tensor with shape:\n *     `[batch, filters, newRows, newCols]` if data_format='channelsFirst'\n *   or 4D tensor with shape:\n *     `[batch, newRows, newCols, filters]` if data_format='channelsLast'.\n *     `rows` and `cols` values might have changed due to padding.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\nexport function separableConv2d(args: SeparableConvLayerArgs) {\n  return new SeparableConv2D(args);\n}\n\n/**\n * Cropping layer for 2D input (e.g., image).\n *\n * This layer can crop an input\n * at the top, bottom, left and right side of an image tensor.\n *\n * Input shape:\n *   4D tensor with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, rows, cols, channels]`\n *   - If `data_format` is `\"channels_first\"`:\n *     `[batch, channels, rows, cols]`.\n *\n * Output shape:\n *   4D with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, croppedRows, croppedCols, channels]`\n *    - If `dataFormat` is `\"channelsFirst\"`:\n *     `[batch, channels, croppedRows, croppedCols]`.\n *\n * Examples\n * ```js\n *\n * const model = tf.sequential();\n * model.add(tf.layers.cropping2D({cropping:[[2, 2], [2, 2]],\n *                                inputShape: [128, 128, 3]}));\n * //now output shape is [batch, 124, 124, 3]\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\nexport function cropping2D(args: Cropping2DLayerArgs) {\n  return new Cropping2D(args);\n}\n\n/**\n * Upsampling layer for 2D inputs.\n *\n * Repeats the rows and columns of the data\n * by size[0] and size[1] respectively.\n *\n *\n * Input shape:\n *    4D tensor with shape:\n *     - If `dataFormat` is `\"channelsLast\"`:\n *         `[batch, rows, cols, channels]`\n *     - If `dataFormat` is `\"channelsFirst\"`:\n *        `[batch, channels, rows, cols]`\n *\n * Output shape:\n *     4D tensor with shape:\n *     - If `dataFormat` is `\"channelsLast\"`:\n *        `[batch, upsampledRows, upsampledCols, channels]`\n *     - If `dataFormat` is `\"channelsFirst\"`:\n *         `[batch, channels, upsampledRows, upsampledCols]`\n *\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\nexport function upSampling2d(args: UpSampling2DLayerArgs) {\n  return new UpSampling2D(args);\n}\n\n// Convolutional(depthwise) Layers.\n\n/**\n * Depthwise separable 2D convolution.\n *\n * Depthwise Separable convolutions consists in performing just the first step\n * in a depthwise spatial convolution (which acts on each input channel\n * separately). The `depthMultiplier` argument controls how many output channels\n * are generated per input channel in the depthwise step.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\nexport function depthwiseConv2d(args: DepthwiseConv2DLayerArgs) {\n  return new DepthwiseConv2D(args);\n}\n\n// Basic Layers.\n\n/**\n * Applies an activation function to an output.\n *\n * This layer applies element-wise activation function.  Other layers, notably\n * `dense` can also apply activation functions.  Use this isolated activation\n * function to extract the values before and after the\n * activation. For instance:\n *\n * ```js\n * const input = tf.input({shape: [5]});\n * const denseLayer = tf.layers.dense({units: 1});\n * const activationLayer = tf.layers.activation({activation: 'relu6'});\n *\n * // Obtain the output symbolic tensors by applying the layers in order.\n * const denseOutput = denseLayer.apply(input);\n * const activationOutput = activationLayer.apply(denseOutput);\n *\n * // Create the model based on the inputs.\n * const model = tf.model({\n *     inputs: input,\n *     outputs: [denseOutput, activationOutput]\n * });\n *\n * // Collect both outputs and print separately.\n * const [denseOut, activationOut] = model.predict(tf.randomNormal([6, 5]));\n * denseOut.print();\n * activationOut.print();\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function activation(args: ActivationLayerArgs) {\n  return new Activation(args);\n}\n\n/**\n * Creates a dense (fully connected) layer.\n *\n * This layer implements the operation:\n *   `output = activation(dot(input, kernel) + bias)`\n *\n * `activation` is the element-wise activation function\n *   passed as the `activation` argument.\n *\n * `kernel` is a weights matrix created by the layer.\n *\n * `bias` is a bias vector created by the layer (only applicable if `useBias`\n * is `true`).\n *\n * **Input shape:**\n *\n *   nD `tf.Tensor` with shape: `(batchSize, ..., inputDim)`.\n *\n *   The most common situation would be\n *   a 2D input with shape `(batchSize, inputDim)`.\n *\n * **Output shape:**\n *\n *   nD tensor with shape: `(batchSize, ..., units)`.\n *\n *   For instance, for a 2D input with shape `(batchSize, inputDim)`,\n *   the output would have shape `(batchSize, units)`.\n *\n * Note: if the input to the layer has a rank greater than 2, then it is\n * flattened prior to the initial dot product with the kernel.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function dense(args: DenseLayerArgs) {\n  return new Dense(args);\n}\n\n/**\n * Applies\n * [dropout](http://www.cs.toronto.edu/~rsalakhu/papers/srivastava14a.pdf) to\n * the input.\n *\n * Dropout consists in randomly setting a fraction `rate` of input units to 0 at\n * each update during training time, which helps prevent overfitting.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function dropout(args: DropoutLayerArgs) {\n  return new Dropout(args);\n}\n\n/**\n * Spatial 1D version of Dropout.\n *\n * This Layer type performs the same function as the Dropout layer, but it drops\n * entire 1D feature maps instead of individual elements. For example, if an\n * input example consists of 3 timesteps and the feature map for each timestep\n * has a size of 4, a `spatialDropout1d` layer may zero out the feature maps\n * of the 1st timesteps and 2nd timesteps completely while sparing all feature\n * elements of the 3rd timestep.\n *\n * If adjacent frames (timesteps) are strongly correlated (as is normally the\n * case in early convolution layers), regular dropout will not regularize the\n * activation and will otherwise just result in merely an effective learning\n * rate decrease. In this case, `spatialDropout1d` will help promote\n * independence among feature maps and should be used instead.\n *\n * **Arguments:**\n *   rate: A floating-point number >=0 and <=1. Fraction of the input elements\n *     to drop.\n *\n * **Input shape:**\n *   3D tensor with shape `(samples, timesteps, channels)`.\n *\n * **Output shape:**\n *   Same as the input shape.\n *\n * References:\n *   - [Efficient Object Localization Using Convolutional\n *      Networks](https://arxiv.org/abs/1411.4280)\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function spatialDropout1d(args: SpatialDropout1DLayerConfig) {\n  return new SpatialDropout1D(args);\n}\n\n/**\n * Flattens the input. Does not affect the batch size.\n *\n * A `Flatten` layer flattens each batch in its inputs to 1D (making the output\n * 2D).\n *\n * For example:\n *\n * ```js\n * const input = tf.input({shape: [4, 3]});\n * const flattenLayer = tf.layers.flatten();\n * // Inspect the inferred output shape of the flatten layer, which\n * // equals `[null, 12]`. The 2nd dimension is 4 * 3, i.e., the result of the\n * // flattening. (The 1st dimension is the undermined batch size.)\n * console.log(JSON.stringify(flattenLayer.apply(input).shape));\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function flatten(args?: FlattenLayerArgs) {\n  return new Flatten(args);\n}\n\n/**\n * Repeats the input n times in a new dimension.\n *\n * ```js\n *  const model = tf.sequential();\n *  model.add(tf.layers.repeatVector({n: 4, inputShape: [2]}));\n *  const x = tf.tensor2d([[10, 20]]);\n *  // Use the model to do inference on a data point the model hasn't seen\n *  model.predict(x).print();\n *  // output shape is now [batch, 2, 4]\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function repeatVector(args: RepeatVectorLayerArgs) {\n  return new RepeatVector(args);\n}\n\n/**\n * Reshapes an input to a certain shape.\n *\n * ```js\n * const input = tf.input({shape: [4, 3]});\n * const reshapeLayer = tf.layers.reshape({targetShape: [2, 6]});\n * // Inspect the inferred output shape of the Reshape layer, which\n * // equals `[null, 2, 6]`. (The 1st dimension is the undermined batch size.)\n * console.log(JSON.stringify(reshapeLayer.apply(input).shape));\n * ```\n *\n * Input shape:\n *   Arbitrary, although all dimensions in the input shape must be fixed.\n *   Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n *\n * Output shape:\n *   [batchSize, targetShape[0], targetShape[1], ...,\n *    targetShape[targetShape.length - 1]].\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function reshape(args: ReshapeLayerArgs) {\n  return new Reshape(args);\n}\n\n/**\n * Permutes the dimensions of the input according to a given pattern.\n *\n * Useful for, e.g., connecting RNNs and convnets together.\n *\n * Example:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.permute({\n *   dims: [2, 1],\n *   inputShape: [10, 64]\n * }));\n * console.log(model.outputShape);\n * // Now model's output shape is [null, 64, 10], where null is the\n * // unpermuted sample (batch) dimension.\n * ```\n *\n * Input shape:\n *   Arbitrary. Use the configuration field `inputShape` when using this\n *   layer as the first layer in a model.\n *\n * Output shape:\n *   Same rank as the input shape, but with the dimensions re-ordered (i.e.,\n *   permuted) according to the `dims` configuration of this layer.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function permute(args: PermuteLayerArgs) {\n  return new Permute(args);\n}\n\n/**\n * Maps positive integers (indices) into dense vectors of fixed size.\n * E.g. [[4], [20]] -> [[0.25, 0.1], [0.6, -0.2]]\n *\n * **Input shape:** 2D tensor with shape: `[batchSize, sequenceLength]`.\n *\n * **Output shape:** 3D tensor with shape: `[batchSize, sequenceLength,\n * outputDim]`.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\nexport function embedding(args: EmbeddingLayerArgs) {\n  return new Embedding(args);\n}\n\n// Merge Layers.\n\n/**\n * Layer that performs element-wise addition on an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape, and returns a\n * single tensor (also of the same shape). The inputs are specified as an\n * `Array` when the `apply` method of the `Add` layer instance is called. For\n * example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const addLayer = tf.layers.add();\n * const sum = addLayer.apply([input1, input2]);\n * console.log(JSON.stringify(sum.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\nexport function add(args?: LayerArgs) {\n  return new Add(args);\n}\n\n/**\n * Layer that performs element-wise averaging on an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape, and returns a\n * single tensor (also of the same shape). For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const averageLayer = tf.layers.average();\n * const average = averageLayer.apply([input1, input2]);\n * console.log(JSON.stringify(average.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\nexport function average(args?: LayerArgs) {\n  return new Average(args);\n}\n\n/**\n * Layer that concatenates an `Array` of inputs.\n *\n * It takes a list of tensors, all of the same shape except for the\n * concatenation axis, and returns a single tensor, the concatenation\n * of all inputs. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 3]});\n * const concatLayer = tf.layers.concatenate();\n * const output = concatLayer.apply([input1, input2]);\n * console.log(JSON.stringify(output.shape));\n * // You get [null, 2, 5], with the first dimension as the undetermined batch\n * // dimension. The last dimension (5) is the result of concatenating the\n * // last dimensions of the inputs (2 and 3).\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\nexport function concatenate(args?: ConcatenateLayerArgs) {\n  return new Concatenate(args);\n}\n\n/**\n * Layer that computes the element-wise maximum of an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape, and returns a\n * single tensor (also of the same shape). For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const maxLayer = tf.layers.maximum();\n * const max = maxLayer.apply([input1, input2]);\n * console.log(JSON.stringify(max.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\nexport function maximum(args?: LayerArgs) {\n  return new Maximum(args);\n}\n\n/**\n * Layer that computes the element-wise minimum of an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape, and returns a\n * single tensor (also of the same shape). For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const minLayer = tf.layers.minimum();\n * const min = minLayer.apply([input1, input2]);\n * console.log(JSON.stringify(min.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\nexport function minimum(args?: LayerArgs) {\n  return new Minimum(args);\n}\n\n/**\n * Layer that multiplies (element-wise) an `Array` of inputs.\n *\n * It takes as input an Array of tensors, all of the same\n * shape, and returns a single tensor (also of the same shape).\n * For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const input3 = tf.input({shape: [2, 2]});\n * const multiplyLayer = tf.layers.multiply();\n * const product = multiplyLayer.apply([input1, input2, input3]);\n * console.log(product.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\nexport function multiply(args?: LayerArgs) {\n  return new Multiply(args);\n}\n\n/**\n * Layer that computes a dot product between samples in two tensors.\n *\n * E.g., if applied to a list of two tensors `a` and `b` both of shape\n * `[batchSize, n]`, the output will be a tensor of shape `[batchSize, 1]`,\n * where each entry at index `[i, 0]` will be the dot product between\n * `a[i, :]` and `b[i, :]`.\n *\n * Example:\n *\n * ```js\n * const dotLayer = tf.layers.dot({axes: -1});\n * const x1 = tf.tensor2d([[10, 20], [30, 40]]);\n * const x2 = tf.tensor2d([[-1, -2], [-3, -4]]);\n *\n * // Invoke the layer's apply() method in eager (imperative) mode.\n * const y = dotLayer.apply([x1, x2]);\n * y.print();\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\nexport function dot(args: DotLayerArgs) {\n  return new Dot(args);\n}\n\n// Normalization Layers.\n\n/**\n * Batch normalization layer (Ioffe and Szegedy, 2014).\n *\n * Normalize the activations of the previous layer at each batch,\n * i.e. applies a transformation that maintains the mean activation\n * close to 0 and the activation standard deviation close to 1.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape` (Array of integers, does\n *   not include the sample axis) when calling the constructor of this class,\n *   if this layer is used as a first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * References:\n *   - [Batch Normalization: Accelerating Deep Network Training by Reducing\n * Internal Covariate Shift](https://arxiv.org/abs/1502.03167)\n *\n * @doc {heading: 'Layers', subheading: 'Normalization', namespace: 'layers'}\n */\nexport function batchNormalization(args?: BatchNormalizationLayerArgs) {\n  return new BatchNormalization(args);\n}\n\n/**\n * Layer-normalization layer (Ba et al., 2016).\n *\n * Normalizes the activations of the previous layer for each given example in a\n * batch independently, instead of across a batch like in `batchNormalization`.\n * In other words, this layer applies a transformation that maintains the mean\n * activation within each example close to 0 and activation variance close to 1.\n *\n * Input shape:\n *   Arbitrary. Use the argument `inputShape` when using this layer as the first\n *   layer in a model.\n *\n * Output shape:\n *   Same as input.\n *\n * References:\n *   - [Layer Normalization](https://arxiv.org/abs/1607.06450)\n *\n * @doc {heading: 'Layers', subheading: 'Normalization', namespace: 'layers'}\n */\nexport function layerNormalization(args?: LayerNormalizationLayerArgs) {\n  return new LayerNormalization(args);\n}\n\n// Padding Layers.\n\n/**\n * Zero-padding layer for 2D input (e.g., image).\n *\n * This layer can add rows and columns of zeros\n * at the top, bottom, left and right side of an image tensor.\n *\n * Input shape:\n *   4D tensor with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, rows, cols, channels]`\n *   - If `data_format` is `\"channels_first\"`:\n *     `[batch, channels, rows, cols]`.\n *\n * Output shape:\n *   4D with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, paddedRows, paddedCols, channels]`\n *    - If `dataFormat` is `\"channelsFirst\"`:\n *     `[batch, channels, paddedRows, paddedCols]`.\n *\n * @doc {heading: 'Layers', subheading: 'Padding', namespace: 'layers'}\n */\nexport function zeroPadding2d(args?: ZeroPadding2DLayerArgs) {\n  return new ZeroPadding2D(args);\n}\n\n// Pooling Layers.\n\n/**\n * Average pooling operation for spatial data.\n *\n * Input shape: `[batchSize, inLength, channels]`\n *\n * Output shape: `[batchSize, pooledLength, channels]`\n *\n * `tf.avgPool1d` is an alias.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function averagePooling1d(args: Pooling1DLayerArgs) {\n  return new AveragePooling1D(args);\n}\nexport function avgPool1d(args: Pooling1DLayerArgs) {\n  return averagePooling1d(args);\n}\n// For backwards compatibility.\n// See https://github.com/tensorflow/tfjs/issues/152\nexport function avgPooling1d(args: Pooling1DLayerArgs) {\n  return averagePooling1d(args);\n}\n\n/**\n * Average pooling operation for spatial data.\n *\n * Input shape:\n *  - If `dataFormat === CHANNEL_LAST`:\n *      4D tensor with shape:\n *      `[batchSize, rows, cols, channels]`\n *  - If `dataFormat === CHANNEL_FIRST`:\n *      4D tensor with shape:\n *      `[batchSize, channels, rows, cols]`\n *\n * Output shape\n *  - If `dataFormat === CHANNEL_LAST`:\n *      4D tensor with shape:\n *      `[batchSize, pooledRows, pooledCols, channels]`\n *  - If `dataFormat === CHANNEL_FIRST`:\n *      4D tensor with shape:\n *      `[batchSize, channels, pooledRows, pooledCols]`\n *\n * `tf.avgPool2d` is an alias.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function averagePooling2d(args: Pooling2DLayerArgs) {\n  return new AveragePooling2D(args);\n}\nexport function avgPool2d(args: Pooling2DLayerArgs) {\n  return averagePooling2d(args);\n}\n// For backwards compatibility.\n// See https://github.com/tensorflow/tfjs/issues/152\nexport function avgPooling2d(args: Pooling2DLayerArgs) {\n  return averagePooling2d(args);\n}\n\n/**\n * Average pooling operation for 3D data.\n *\n * Input shape\n *   - If `dataFormat === channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, depths, rows, cols, channels]`\n *   - If `dataFormat === channelsFirst`:\n *      4D tensor with shape:\n *       `[batchSize, channels, depths, rows, cols]`\n *\n * Output shape\n *   - If `dataFormat=channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, pooledDepths, pooledRows, pooledCols, channels]`\n *   - If `dataFormat=channelsFirst`:\n *       5D tensor with shape:\n *       `[batchSize, channels, pooledDepths, pooledRows, pooledCols]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function averagePooling3d(args: Pooling3DLayerArgs) {\n  return new AveragePooling3D(args);\n}\nexport function avgPool3d(args: Pooling3DLayerArgs) {\n  return averagePooling3d(args);\n}\n// For backwards compatibility.\n// See https://github.com/tensorflow/tfjs/issues/152\nexport function avgPooling3d(args: Pooling3DLayerArgs) {\n  return averagePooling3d(args);\n}\n\n/**\n * Global average pooling operation for temporal data.\n *\n * Input Shape: 3D tensor with shape: `[batchSize, steps, features]`.\n *\n * Output Shape: 2D tensor with shape: `[batchSize, features]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function globalAveragePooling1d(args?: LayerArgs) {\n  return new GlobalAveragePooling1D(args);\n}\n\n/**\n * Global average pooling operation for spatial data.\n *\n * Input shape:\n *   - If `dataFormat` is `CHANNEL_LAST`:\n *       4D tensor with shape: `[batchSize, rows, cols, channels]`.\n *   - If `dataFormat` is `CHANNEL_FIRST`:\n *       4D tensor with shape: `[batchSize, channels, rows, cols]`.\n *\n * Output shape:\n *   2D tensor with shape: `[batchSize, channels]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function globalAveragePooling2d(args: GlobalPooling2DLayerArgs) {\n  return new GlobalAveragePooling2D(args);\n}\n\n/**\n * Global max pooling operation for temporal data.\n *\n * Input Shape: 3D tensor with shape: `[batchSize, steps, features]`.\n *\n * Output Shape: 2D tensor with shape: `[batchSize, features]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function globalMaxPooling1d(args?: LayerArgs) {\n  return new GlobalMaxPooling1D(args);\n}\n\n/**\n * Global max pooling operation for spatial data.\n *\n * Input shape:\n *   - If `dataFormat` is `CHANNEL_LAST`:\n *       4D tensor with shape: `[batchSize, rows, cols, channels]`.\n *   - If `dataFormat` is `CHANNEL_FIRST`:\n *       4D tensor with shape: `[batchSize, channels, rows, cols]`.\n *\n * Output shape:\n *   2D tensor with shape: `[batchSize, channels]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function globalMaxPooling2d(args: GlobalPooling2DLayerArgs) {\n  return new GlobalMaxPooling2D(args);\n}\n\n/**\n * Max pooling operation for temporal data.\n *\n * Input shape:  `[batchSize, inLength, channels]`\n *\n * Output shape: `[batchSize, pooledLength, channels]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function maxPooling1d(args: Pooling1DLayerArgs) {\n  return new MaxPooling1D(args);\n}\n\n/**\n * Max pooling operation for spatial data.\n *\n * Input shape\n *   - If `dataFormat === CHANNEL_LAST`:\n *       4D tensor with shape:\n *       `[batchSize, rows, cols, channels]`\n *   - If `dataFormat === CHANNEL_FIRST`:\n *      4D tensor with shape:\n *       `[batchSize, channels, rows, cols]`\n *\n * Output shape\n *   - If `dataFormat=CHANNEL_LAST`:\n *       4D tensor with shape:\n *       `[batchSize, pooledRows, pooledCols, channels]`\n *   - If `dataFormat=CHANNEL_FIRST`:\n *       4D tensor with shape:\n *       `[batchSize, channels, pooledRows, pooledCols]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function maxPooling2d(args: Pooling2DLayerArgs) {\n  return new MaxPooling2D(args);\n}\n\n/**\n * Max pooling operation for 3D data.\n *\n * Input shape\n *   - If `dataFormat === channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, depths, rows, cols, channels]`\n *   - If `dataFormat === channelsFirst`:\n *      5D tensor with shape:\n *       `[batchSize, channels, depths, rows, cols]`\n *\n * Output shape\n *   - If `dataFormat=channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, pooledDepths, pooledRows, pooledCols, channels]`\n *   - If `dataFormat=channelsFirst`:\n *       5D tensor with shape:\n *       `[batchSize, channels, pooledDepths, pooledRows, pooledCols]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\nexport function maxPooling3d(args: Pooling3DLayerArgs) {\n  return new MaxPooling3D(args);\n}\n\n// Recurrent Layers.\n\n/**\n * Gated Recurrent Unit - Cho et al. 2014.\n *\n * This is an `RNN` layer consisting of one `GRUCell`. However, unlike\n * the underlying `GRUCell`, the `apply` method of `SimpleRNN` operates\n * on a sequence of inputs. The shape of the input (not including the first,\n * batch dimension) needs to be at least 2-D, with the first dimension being\n * time steps. For example:\n *\n * ```js\n * const rnn = tf.layers.gru({units: 8, returnSequences: true});\n *\n * // Create an input with 10 time steps.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the `GRUCell`'s number of units.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function gru(args: GRULayerArgs) {\n  return new GRU(args);\n}\n\n/**\n * Cell class for `GRU`.\n *\n * `GRUCell` is distinct from the `RNN` subclass `GRU` in that its\n * `apply` method takes the input data of only a single time step and returns\n * the cell's output at the time step, while `GRU` takes the input data\n * over a number of time steps. For example:\n *\n * ```js\n * const cell = tf.layers.gruCell({units: 2});\n * const input = tf.input({shape: [10]});\n * const output = cell.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10]: This is the cell's output at a single time step. The 1st\n * // dimension is the unknown batch size.\n * ```\n *\n * Instance(s) of `GRUCell` can be used to construct `RNN` layers. The\n * most typical use of this workflow is to combine a number of cells into a\n * stacked RNN cell (i.e., `StackedRNNCell` internally) and use it to create an\n * RNN. For example:\n *\n * ```js\n * const cells = [\n *   tf.layers.gruCell({units: 4}),\n *   tf.layers.gruCell({units: 8}),\n * ];\n * const rnn = tf.layers.rnn({cell: cells, returnSequences: true});\n *\n * // Create an input with 10 time steps and a length-20 vector at each step.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the last `gruCell`'s number of units.\n * ```\n *\n * To create an `RNN` consisting of only *one* `GRUCell`, use the\n * `tf.layers.gru`.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function gruCell(args: GRUCellLayerArgs) {\n  return new GRUCell(args);\n}\n\n/**\n * Long-Short Term Memory layer - Hochreiter 1997.\n *\n * This is an `RNN` layer consisting of one `LSTMCell`. However, unlike\n * the underlying `LSTMCell`, the `apply` method of `LSTM` operates\n * on a sequence of inputs. The shape of the input (not including the first,\n * batch dimension) needs to be at least 2-D, with the first dimension being\n * time steps. For example:\n *\n * ```js\n * const lstm = tf.layers.lstm({units: 8, returnSequences: true});\n *\n * // Create an input with 10 time steps.\n * const input = tf.input({shape: [10, 20]});\n * const output = lstm.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the `LSTMCell`'s number of units.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function lstm(args: LSTMLayerArgs) {\n  return new LSTM(args);\n}\n\n/**\n * Cell class for `LSTM`.\n *\n * `LSTMCell` is distinct from the `RNN` subclass `LSTM` in that its\n * `apply` method takes the input data of only a single time step and returns\n * the cell's output at the time step, while `LSTM` takes the input data\n * over a number of time steps. For example:\n *\n * ```js\n * const cell = tf.layers.lstmCell({units: 2});\n * const input = tf.input({shape: [10]});\n * const output = cell.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10]: This is the cell's output at a single time step. The 1st\n * // dimension is the unknown batch size.\n * ```\n *\n * Instance(s) of `LSTMCell` can be used to construct `RNN` layers. The\n * most typical use of this workflow is to combine a number of cells into a\n * stacked RNN cell (i.e., `StackedRNNCell` internally) and use it to create an\n * RNN. For example:\n *\n * ```js\n * const cells = [\n *   tf.layers.lstmCell({units: 4}),\n *   tf.layers.lstmCell({units: 8}),\n * ];\n * const rnn = tf.layers.rnn({cell: cells, returnSequences: true});\n *\n * // Create an input with 10 time steps and a length-20 vector at each step.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the last `lstmCell`'s number of units.\n * ```\n *\n * To create an `RNN` consisting of only *one* `LSTMCell`, use the\n * `tf.layers.lstm`.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function lstmCell(args: LSTMCellLayerArgs) {\n  return new LSTMCell(args);\n}\n\n/**\n * Fully-connected RNN where the output is to be fed back to input.\n *\n * This is an `RNN` layer consisting of one `SimpleRNNCell`. However, unlike\n * the underlying `SimpleRNNCell`, the `apply` method of `SimpleRNN` operates\n * on a sequence of inputs. The shape of the input (not including the first,\n * batch dimension) needs to be at least 2-D, with the first dimension being\n * time steps. For example:\n *\n * ```js\n * const rnn = tf.layers.simpleRNN({units: 8, returnSequences: true});\n *\n * // Create an input with 10 time steps.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the `SimpleRNNCell`'s number of units.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function simpleRNN(args: SimpleRNNLayerArgs) {\n  return new SimpleRNN(args);\n}\n\n/**\n * Cell class for `SimpleRNN`.\n *\n * `SimpleRNNCell` is distinct from the `RNN` subclass `SimpleRNN` in that its\n * `apply` method takes the input data of only a single time step and returns\n * the cell's output at the time step, while `SimpleRNN` takes the input data\n * over a number of time steps. For example:\n *\n * ```js\n * const cell = tf.layers.simpleRNNCell({units: 2});\n * const input = tf.input({shape: [10]});\n * const output = cell.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10]: This is the cell's output at a single time step. The 1st\n * // dimension is the unknown batch size.\n * ```\n *\n * Instance(s) of `SimpleRNNCell` can be used to construct `RNN` layers. The\n * most typical use of this workflow is to combine a number of cells into a\n * stacked RNN cell (i.e., `StackedRNNCell` internally) and use it to create an\n * RNN. For example:\n *\n * ```js\n * const cells = [\n *   tf.layers.simpleRNNCell({units: 4}),\n *   tf.layers.simpleRNNCell({units: 8}),\n * ];\n * const rnn = tf.layers.rnn({cell: cells, returnSequences: true});\n *\n * // Create an input with 10 time steps and a length-20 vector at each step.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the last `SimpleRNNCell`'s number of units.\n * ```\n *\n * To create an `RNN` consisting of only *one* `SimpleRNNCell`, use the\n * `tf.layers.simpleRNN`.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function simpleRNNCell(args: SimpleRNNCellLayerArgs) {\n  return new SimpleRNNCell(args);\n}\n\n/**\n * Convolutional LSTM layer - Xingjian Shi 2015.\n *\n * This is a `ConvRNN2D` layer consisting of one `ConvLSTM2DCell`. However,\n * unlike the underlying `ConvLSTM2DCell`, the `apply` method of `ConvLSTM2D`\n * operates on a sequence of inputs. The shape of the input (not including the\n * first, batch dimension) needs to be 4-D, with the first dimension being time\n * steps. For example:\n *\n * ```js\n * const filters = 3;\n * const kernelSize = 3;\n *\n * const batchSize = 4;\n * const sequenceLength = 2;\n * const size = 5;\n * const channels = 3;\n *\n * const inputShape = [batchSize, sequenceLength, size, size, channels];\n * const input = tf.ones(inputShape);\n *\n * const layer = tf.layers.convLstm2d({filters, kernelSize});\n *\n * const output = layer.apply(input);\n * ```\n */\n/** @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'} */\nexport function convLstm2d(args: ConvLSTM2DArgs) {\n  return new ConvLSTM2D(args);\n}\n\n/**\n * Cell class for `ConvLSTM2D`.\n *\n * `ConvLSTM2DCell` is distinct from the `ConvRNN2D` subclass `ConvLSTM2D` in\n * that its `call` method takes the input data of only a single time step and\n * returns the cell's output at the time step, while `ConvLSTM2D` takes the\n * input data over a number of time steps. For example:\n *\n * ```js\n * const filters = 3;\n * const kernelSize = 3;\n *\n * const sequenceLength = 1;\n * const size = 5;\n * const channels = 3;\n *\n * const inputShape = [sequenceLength, size, size, channels];\n * const input = tf.ones(inputShape);\n *\n * const cell = tf.layers.convLstm2dCell({filters, kernelSize});\n *\n * cell.build(input.shape);\n *\n * const outputSize = size - kernelSize + 1;\n * const outShape = [sequenceLength, outputSize, outputSize, filters];\n *\n * const initialH = tf.zeros(outShape);\n * const initialC = tf.zeros(outShape);\n *\n * const [o, h, c] = cell.call([input, initialH, initialC], {});\n * ```\n */\n/** @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'} */\nexport function convLstm2dCell(args: ConvLSTM2DCellArgs) {\n  return new ConvLSTM2DCell(args);\n}\n\n/**\n * Base class for recurrent layers.\n *\n * Input shape:\n *   3D tensor with shape `[batchSize, timeSteps, inputDim]`.\n *\n * Output shape:\n *   - if `returnState`, an Array of tensors (i.e., `tf.Tensor`s). The first\n *     tensor is the output. The remaining tensors are the states at the\n *     last time step, each with shape `[batchSize, units]`.\n *   - if `returnSequences`, the output will have shape\n *     `[batchSize, timeSteps, units]`.\n *   - else, the output will have shape `[batchSize, units]`.\n *\n * Masking:\n *   This layer supports masking for input data with a variable number\n *   of timesteps. To introduce masks to your data,\n *   use an embedding layer with the `mask_zero` parameter\n *   set to `True`.\n *\n * Notes on using statefulness in RNNs:\n *   You can set RNN layers to be 'stateful', which means that the states\n *   computed for the samples in one batch will be reused as initial states\n *   for the samples in the next batch. This assumes a one-to-one mapping\n *   between samples in different successive batches.\n *\n *   To enable statefulness:\n *     - specify `stateful: true` in the layer constructor.\n *     - specify a fixed batch size for your model, by passing\n *       if sequential model:\n *         `batchInputShape=[...]` to the first layer in your model.\n *       else for functional model with 1 or more Input layers:\n *         `batchShape=[...]` to all the first layers in your model.\n *       This is the expected shape of your inputs *including the batch size*.\n *       It should be a tuple of integers, e.g. `(32, 10, 100)`.\n *     - specify `shuffle=False` when calling fit().\n *\n *   To reset the states of your model, call `.resetStates()` on either\n *   a specific layer, or on your entire model.\n *\n * Note on specifying the initial state of RNNs\n *   You can specify the initial state of RNN layers symbolically by\n *   calling them with the option `initialState`. The value of\n *   `initialState` should be a tensor or list of tensors representing\n *   the initial state of the RNN layer.\n *\n *   You can specify the initial state of RNN layers numerically by\n *   calling `resetStates` with the keyword argument `states`. The value of\n *   `states` should be a numpy array or list of numpy arrays representing\n *   the initial state of the RNN layer.\n *\n * Note on passing external constants to RNNs\n *   You can pass \"external\" constants to the cell using the `constants`\n *   keyword argument of `RNN.call` method. This requires that the `cell.call`\n *   method accepts the same keyword argument `constants`. Such constants\n *   can be used to condition the cell transformation on additional static\n *   inputs (not changing over time), a.k.a. an attention mechanism.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function rnn(args: RNNLayerArgs) {\n  return new RNN(args);\n}\n\n/**\n * Wrapper allowing a stack of RNN cells to behave as a single cell.\n *\n * Used to implement efficient stacked RNNs.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\nexport function stackedRNNCells(args: StackedRNNCellsArgs){\n  return new StackedRNNCells(args);\n}\n\n// Wrapper Layers.\n\n/** @doc {heading: 'Layers', subheading: 'Wrapper', namespace: 'layers'} */\nexport function bidirectional(args: BidirectionalLayerArgs) {\n  return new Bidirectional(args);\n}\n\n/**\n * This wrapper applies a layer to every temporal slice of an input.\n *\n * The input should be at least 3D,  and the dimension of the index `1` will be\n * considered to be the temporal dimension.\n *\n * Consider a batch of 32 samples, where each sample is a sequence of 10 vectors\n * of 16 dimensions. The batch input shape of the layer is then `[32,  10,\n * 16]`, and the `inputShape`, not including the sample dimension, is\n * `[10, 16]`.\n *\n * You can then use `TimeDistributed` to apply a `Dense` layer to each of the 10\n * timesteps, independently:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.timeDistributed({\n *   layer: tf.layers.dense({units: 8}),\n *   inputShape: [10, 16],\n * }));\n *\n * // Now model.outputShape = [null, 10, 8].\n * // The output will then have shape `[32, 10, 8]`.\n *\n * // In subsequent layers, there is no need for `inputShape`:\n * model.add(tf.layers.timeDistributed({layer: tf.layers.dense({units: 32})}));\n * console.log(JSON.stringify(model.outputs[0].shape));\n * // Now model.outputShape = [null, 10, 32].\n * ```\n *\n * The output will then have shape `[32, 10, 32]`.\n *\n * `TimeDistributed` can be used with arbitrary layers, not just `Dense`, for\n * instance a `Conv2D` layer.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.timeDistributed({\n *   layer: tf.layers.conv2d({filters: 64, kernelSize: [3, 3]}),\n *   inputShape: [10, 299, 299, 3],\n * }));\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Wrapper', namespace: 'layers'}\n */\nexport function timeDistributed(args: WrapperLayerArgs) {\n  return new TimeDistributed(args);\n}\n\n// Aliases for pooling.\nexport const globalMaxPool1d = globalMaxPooling1d;\nexport const globalMaxPool2d = globalMaxPooling2d;\nexport const maxPool1d = maxPooling1d;\nexport const maxPool2d = maxPooling2d;\n\nexport {Layer, RNN, RNNCell, input /* alias for tf.input */};\n\n/**\n * Apply additive zero-centered Gaussian noise.\n *\n * As it is a regularization layer, it is only active at training time.\n *\n * This is useful to mitigate overfitting\n * (you could see it as a form of random data augmentation).\n * Gaussian Noise (GS) is a natural choice as corruption process\n * for real valued inputs.\n *\n * # Arguments\n * stddev: float, standard deviation of the noise distribution.\n *\n * # Input shape\n * Arbitrary. Use the keyword argument `input_shape`\n * (tuple of integers, does not include the samples axis)\n * when using this layer as the first layer in a model.\n *\n * # Output shape\n * Same shape as input.\n *\n * @doc {heading: 'Layers', subheading: 'Noise', namespace: 'layers'}\n */\nexport function gaussianNoise(args: GaussianNoiseArgs) {\n  return new GaussianNoise(args);\n}\n\n/**\n * Apply multiplicative 1-centered Gaussian noise.\n *\n * As it is a regularization layer, it is only active at training time.\n *\n * Arguments:\n *   - `rate`: float, drop probability (as with `Dropout`).\n *     The multiplicative noise will have\n *     standard deviation `sqrt(rate / (1 - rate))`.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape`\n *   (tuple of integers, does not include the samples axis)\n *   when using this layer as the first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * References:\n *   - [Dropout: A Simple Way to Prevent Neural Networks from Overfitting](\n *      http://www.cs.toronto.edu/~rsalakhu/papers/srivastava14a.pdf)\n *\n * @doc {heading: 'Layers', subheading: 'Noise', namespace: 'layers'}\n */\nexport function gaussianDropout(args: GaussianDropoutArgs) {\n  return new GaussianDropout(args);\n}\n\n/**\n * Applies Alpha Dropout to the input.\n *\n * As it is a regularization layer, it is only active at training time.\n *\n * Alpha Dropout is a `Dropout` that keeps mean and variance of inputs\n * to their original values, in order to ensure the self-normalizing property\n * even after this dropout.\n * Alpha Dropout fits well to Scaled Exponential Linear Units\n * by randomly setting activations to the negative saturation value.\n *\n * Arguments:\n *   - `rate`: float, drop probability (as with `Dropout`).\n *     The multiplicative noise will have\n *     standard deviation `sqrt(rate / (1 - rate))`.\n *   - `noise_shape`: A 1-D `Tensor` of type `int32`, representing the\n *     shape for randomly generated keep/drop flags.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape`\n *   (tuple of integers, does not include the samples axis)\n *   when using this layer as the first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * References:\n *   - [Self-Normalizing Neural Networks](https://arxiv.org/abs/1706.02515)\n *\n * @doc {heading: 'Layers', subheading: 'Noise', namespace: 'layers'}\n */\nexport function alphaDropout(args: AlphaDropoutArgs) {\n  return new AlphaDropout(args);\n}\n\n/**\n * Masks a sequence by using a mask value to skip timesteps.\n *\n * If all features for a given sample timestep are equal to `mask_value`,\n * then the sample timestep will be masked (skipped) in all downstream layers\n * (as long as they support masking).\n *\n * If any downstream layer does not support masking yet receives such\n * an input mask, an exception will be raised.\n *\n * Arguments:\n *   - `maskValue`: Either None or mask value to skip.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape`\n *   (tuple of integers, does not include the samples axis)\n *   when using this layer as the first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * @doc {heading: 'Layers', subheading: 'Mask', namespace: 'layers'}\n */\nexport function masking(args?: MaskingArgs) {\n  return new Masking(args);\n}\n\n/**\n * A preprocessing layer which rescales input values to a new range.\n *\n * This layer rescales every value of an input (often an image) by multiplying\n * by `scale` and adding `offset`.\n *\n * For instance:\n * 1. To rescale an input in the ``[0, 255]`` range\n * to be in the `[0, 1]` range, you would pass `scale=1/255`.\n * 2. To rescale an input in the ``[0, 255]`` range to be in the `[-1, 1]`\n * range, you would pass `scale=1./127.5, offset=-1`.\n * The rescaling is applied both during training and inference. Inputs can be\n * of integer or floating point dtype, and by default the layer will output\n * floats.\n *\n * Arguments:\n *   - `scale`: Float, the scale to apply to the inputs.\n *   - `offset`: Float, the offset to apply to the inputs.\n *\n * Input shape:\n *   Arbitrary.\n *\n * Output shape:\n *   Same as input.\n *\n * @doc {heading: 'Layers', subheading: 'Rescaling', namespace: 'layers'}\n */\nexport function rescaling(args?: RescalingArgs) {\n  return new Rescaling(args);\n}\n\n/**\n *  A preprocessing layer which center crops images.\n *\n *   This layers crops the central portion of the images to a target size. If an\n *   image is smaller than the target size, it will be resized and cropped so as\n *   to return the largest possible window in the image that matches the target\n *   aspect ratio.\n *\n *   Input pixel values can be of any range (e.g. `[0., 1.)` or `[0, 255]`) and\n *   of integer or floating point dtype.\n *\n *   If the input height/width is even and the target height/width is odd (or\n *   inversely), the input image is left-padded by 1 pixel.\n *\n *   Arguments:\n *     `height`: Integer, the height of the output shape.\n *     `width`: Integer, the width of the output shape.\n *\n *   Input shape:\n *     3D (unbatched) or 4D (batched) tensor with shape:\n *     `(..., height, width, channels)`, in `channelsLast` format.\n *\n *   Output shape:\n *     3D (unbatched) or 4D (batched) tensor with shape:\n *     `(..., targetHeight, targetWidth, channels)`.\n *\n *\n *  @doc {heading: 'Layers', subheading: 'CenterCrop', namespace: 'layers'}\n */\nexport function centerCrop(args?: CenterCropArgs) {\n   return new CenterCrop(args);\n  }\n\n/**\n * A preprocessing layer which resizes images.\n * This layer resizes an image input to a target height and width. The input\n * should be a 4D (batched) or 3D (unbatched) tensor in `\"channels_last\"`\n * format.  Input pixel values can be of any range (e.g. `[0., 1.)` or `[0,\n * 255]`) and of interger or floating point dtype. By default, the layer will\n * output floats.\n *\n * Arguments:\n *   - `height`: number, the height for the output tensor.\n *   - `width`: number, the width for the output tensor.\n *   - `interpolation`: string, the method for image resizing interpolation.\n *   - `cropToAspectRatio`: boolean, whether to keep image aspect ratio.\n *\n * Input shape:\n *   Arbitrary.\n *\n * Output shape:\n *   height, width, num channels.\n *\n * @doc {heading: 'Layers', subheading: 'Resizing', namespace: 'layers'}\n */\nexport function resizing(args?: ResizingArgs) {\n  return new Resizing(args);\n}\n\n/**\n * A preprocessing layer which encodes integer features.\n *\n * This layer provides options for condensing data into a categorical encoding\n * when the total number of tokens are known in advance. It accepts integer\n * values as inputs, and it outputs a dense representation of those\n * inputs.\n *\n * Arguments:\n *\n * numTokens: The total number of tokens the layer should support. All\n *  inputs to the layer must integers in the range `0 <= value <\n *  numTokens`, or an error will be thrown.\n *\n * outputMode: Specification for the output of the layer.\n *  Defaults to `multiHot`. Values can be `oneHot`, `multiHot` or\n *  `count`, configuring the layer as follows:\n *\n *    oneHot: Encodes each individual element in the input into an\n *      array of `numTokens` size, containing a 1 at the element index. If\n *      the last dimension is size 1, will encode on that dimension. If the\n *      last dimension is not size 1, will append a new dimension for the\n *      encoded output.\n *\n *    multiHot: Encodes each sample in the input into a single array\n *     of `numTokens` size, containing a 1 for each vocabulary term\n *     present in the sample. Treats the last dimension as the sample\n *     dimension, if input shape is `(..., sampleLength)`, output shape\n *     will be `(..., numTokens)`.\n *\n *    count: Like `multiHot`, but the int array contains a count of\n *     the number of times the token at that index appeared in the sample.\n *\n *  For all output modes, currently only output up to rank 2 is supported.\n *   Call arguments:\n *    inputs: A 1D or 2D tensor of integer inputs.\n *    countWeights: A tensor in the same shape as `inputs` indicating the\n *    weight for each sample value when summing up in `count` mode. Not used\n *    in `multiHot` or `oneHot` modes.\n *\n *\n * @doc {heading: 'Layers', subheading: 'CategoryEncoding', namespace: 'layers'}\n */\nexport function categoryEncoding(args: CategoryEncodingArgs) {\n  return new CategoryEncoding(args);\n}\n\n /**\n  * A preprocessing layer which randomly varies image width during training.\n  *\n  * This layer will randomly adjusts the width of a batch of images of a batch\n  * of images by a random factor.\n  *\n  * The input should be a 3D (unbatched) or 4D (batched) tensor in\n  * the `\"channels_last\"` image data format. Input pixel values can be of any\n  * range (e.g. `[0., 1.)` or `[0, 255]`) and of integer or floating point\n  * dtype. By default, the layer will output floats. By default, this layer is\n  * inactive during inference. For an overview and full list of preprocessing\n  * layers, see the preprocessing [guide]\n  * (https://www.tensorflow.org/guide/keras/preprocessing_layers).\n  *\n  * Arguments:\n  *\n  * factor:\n  *   A positive float (fraction of original width), or a tuple of size 2\n  *   representing lower and upper bound for resizing vertically.\n  *   When represented as a single float, this value is used for both the upper\n  *   and lower bound. For instance, `factor=(0.2, 0.3)` results in an output\n  *   with width changed by a random amount in the range `[20%, 30%]`.\n  *   `factor=(-0.2, 0.3)` results in an output with width changed by a random\n  *   amount in the range `[-20%, +30%]`. `factor=0.2` results in an output\n  *   with width changed by a random amount in the range `[-20%, +20%]`.\n  * interpolation:\n  *   String, the interpolation method.\n  *   Defaults to `bilinear`.\n  *   Supports `\"bilinear\"`, `\"nearest\"`.\n  *   The tf methods `\"bicubic\"`, `\"area\"`, `\"lanczos3\"`, `\"lanczos5\"`,\n  *   `\"gaussian\"`, `\"mitchellcubic\"` are unimplemented in tfjs.\n  * seed:\n  *   Integer. Used to create a random seed.\n  *\n  * Input shape:\n  *     3D (unbatched) or 4D (batched) tensor with shape:\n  *     `(..., height, width, channels)`, in `\"channels_last\"` format.\n  * Output shape:\n  *     3D (unbatched) or 4D (batched) tensor with shape:\n  *     `(..., height, random_width, channels)`.\n  *\n  *\n  * @doc {heading: 'Layers', subheading: 'RandomWidth', namespace: 'layers'}\n  */\n  export function randomWidth(args: RandomWidthArgs) {\n    return new RandomWidth(args);\n  }\n"},"lineCount":null}},"error":null,"hash":"e21fbf1fcb14c42641876b7fa90e6487","cacheData":{"env":{}}}