{"id":"UbkS","dependencies":[{"name":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\package.json","includedInParent":true,"mtime":1690043720032},{"name":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1689961114193},{"name":"./base_callbacks","loc":{"line":13,"column":44,"index":358},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\base_callbacks.js"},{"name":"./engine/input_layer","loc":{"line":14,"column":23,"index":401},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\input_layer.js"},{"name":"./engine/training","loc":{"line":15,"column":28,"index":453},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js"},{"name":"./models","loc":{"line":17,"column":32,"index":545},"parent":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports.js","resolved":"C:\\Users\\hasit\\OneDrive\\Desktop\\MERN\\AI Chrome Extension Practice\\Webcam object detection\\node_modules\\@tensorflow\\tfjs-layers\\dist\\models.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.input=i,Object.defineProperty(exports,\"loadLayersModel\",{enumerable:!0,get:function(){return n.loadLayersModel}}),exports.model=o,exports.registerCallbackConstructor=s,exports.sequential=u;var e=require(\"./base_callbacks\"),r=require(\"./engine/input_layer\"),t=require(\"./engine/training\"),n=require(\"./models\");function o(e){return new t.LayersModel(e)}function u(e){return new n.Sequential(e)}function i(e){return(0,r.Input)(e)}function s(r,t){e.CallbackConstructorRegistry.registerCallbackConstructor(r,t)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":20}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":35}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":43}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":57}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":82}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":106}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":132}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":133}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":145}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":147}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":151}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":162}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":169}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":171}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":190}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":198}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":204}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":206}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":214}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":242}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":244}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":252}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":170,"column":0},"generated":{"line":1,"column":263}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":265}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":269}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":271}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":279}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":299}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":301}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":309}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":333}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":335}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":343}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":364}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":366}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":374}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":1,"column":386}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":70,"column":16},"generated":{"line":1,"column":395}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":70,"column":22},"generated":{"line":1,"column":397}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":1,"column":400}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":71,"column":9},"generated":{"line":1,"column":407}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":71,"column":13},"generated":{"line":1,"column":411}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":71,"column":24},"generated":{"line":1,"column":413}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":71,"column":25},"generated":{"line":1,"column":425}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":134,"column":6},"generated":{"line":1,"column":428}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":134,"column":16},"generated":{"line":1,"column":437}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":134,"column":27},"generated":{"line":1,"column":439}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":135,"column":2},"generated":{"line":1,"column":442}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":135,"column":9},"generated":{"line":1,"column":449}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":135,"column":13},"generated":{"line":1,"column":453}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":135,"column":23},"generated":{"line":1,"column":455}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":135,"column":24},"generated":{"line":1,"column":466}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":161,"column":6},"generated":{"line":1,"column":469}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":161,"column":16},"generated":{"line":1,"column":478}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":161,"column":22},"generated":{"line":1,"column":480}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":1,"column":483}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":162,"column":9},"generated":{"line":1,"column":490}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":162,"column":9},"generated":{"line":1,"column":492}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":162,"column":14},"generated":{"line":1,"column":494}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":162,"column":15},"generated":{"line":1,"column":501}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":165,"column":6},"generated":{"line":1,"column":504}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":165,"column":16},"generated":{"line":1,"column":513}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":166,"column":4},"generated":{"line":1,"column":515}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":167,"column":4},"generated":{"line":1,"column":517}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":168,"column":2},"generated":{"line":1,"column":520}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":168,"column":29},"generated":{"line":1,"column":522}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":168,"column":30},"generated":{"line":1,"column":550}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":169,"column":6},"generated":{"line":1,"column":578}},{"source":"../../../../../tfjs-layers/src/exports.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":1,"column":580}}],"sources":{"../../../../../tfjs-layers/src/exports.ts":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Exported functions.\n */\n\nimport {BaseCallbackConstructor, CallbackConstructorRegistry} from './base_callbacks';\nimport {ContainerArgs} from './engine/container';\nimport {Input, InputConfig,} from './engine/input_layer';\nimport {SymbolicTensor} from './engine/topology';\nimport {LayersModel} from './engine/training';\nimport {Sequential, SequentialArgs} from './models';\n\nexport {loadLayersModel} from './models';\n\n// TODO(cais): Add doc string to all the public static functions in this\n//   class; include exectuable JavaScript code snippets where applicable\n//   (b/74074458).\n\n// LayersModel and related factory methods.\n\n/**\n * A model is a data structure that consists of `Layers` and defines inputs\n * and outputs.\n *\n * The key difference between `tf.model` and `tf.sequential` is that\n * `tf.model` is more generic, supporting an arbitrary graph (without\n * cycles) of layers. `tf.sequential` is less generic and supports only a linear\n * stack of layers.\n *\n * When creating a `tf.LayersModel`, specify its input(s) and output(s). Layers\n * are used to wire input(s) to output(s).\n *\n * For example, the following code snippet defines a model consisting of\n * two `dense` layers, with 10 and 4 units, respectively.\n *\n * ```js\n * // Define input, which has a size of 5 (not including batch dimension).\n * const input = tf.input({shape: [5]});\n *\n * // First dense layer uses relu activation.\n * const denseLayer1 = tf.layers.dense({units: 10, activation: 'relu'});\n * // Second dense layer uses softmax activation.\n * const denseLayer2 = tf.layers.dense({units: 4, activation: 'softmax'});\n *\n * // Obtain the output symbolic tensor by applying the layers on the input.\n * const output = denseLayer2.apply(denseLayer1.apply(input));\n *\n * // Create the model based on the inputs.\n * const model = tf.model({inputs: input, outputs: output});\n *\n * // The model can be used for training, evaluation and prediction.\n * // For example, the following line runs prediction with the model on\n * // some fake data.\n * model.predict(tf.ones([2, 5])).print();\n * ```\n * See also:\n *   `tf.sequential`, `tf.loadLayersModel`.\n *\n * @doc {heading: 'Models', subheading: 'Creation'}\n */\nexport function model(args: ContainerArgs): LayersModel {\n  return new LayersModel(args);\n}\n\n/**\n * Creates a `tf.Sequential` model.  A sequential model is any model where the\n * outputs of one layer are the inputs to the next layer, i.e. the model\n * topology is a simple 'stack' of layers, with no branching or skipping.\n *\n * This means that the first layer passed to a `tf.Sequential` model should have\n * a defined input shape. What that means is that it should have received an\n * `inputShape` or `batchInputShape` argument, or for some type of layers\n * (recurrent, Dense...) an `inputDim` argument.\n *\n * The key difference between `tf.model` and `tf.sequential` is that\n * `tf.sequential` is less generic, supporting only a linear stack of layers.\n * `tf.model` is more generic and supports an arbitrary graph (without\n * cycles) of layers.\n *\n * Examples:\n *\n * ```js\n * const model = tf.sequential();\n *\n * // First layer must have an input shape defined.\n * model.add(tf.layers.dense({units: 32, inputShape: [50]}));\n * // Afterwards, TF.js does automatic shape inference.\n * model.add(tf.layers.dense({units: 4}));\n *\n * // Inspect the inferred shape of the model's output, which equals\n * // `[null, 4]`. The 1st dimension is the undetermined batch dimension; the\n * // 2nd is the output size of the model's last layer.\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * It is also possible to specify a batch size (with potentially undetermined\n * batch dimension, denoted by \"null\") for the first layer using the\n * `batchInputShape` key. The following example is equivalent to the above:\n *\n * ```js\n * const model = tf.sequential();\n *\n * // First layer must have a defined input shape\n * model.add(tf.layers.dense({units: 32, batchInputShape: [null, 50]}));\n * // Afterwards, TF.js does automatic shape inference.\n * model.add(tf.layers.dense({units: 4}));\n *\n * // Inspect the inferred shape of the model's output.\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * You can also use an `Array` of already-constructed `Layer`s to create\n * a `tf.Sequential` model:\n *\n * ```js\n * const model = tf.sequential({\n *   layers: [tf.layers.dense({units: 32, inputShape: [50]}),\n *            tf.layers.dense({units: 4})]\n * });\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * @doc {heading: 'Models', subheading: 'Creation'}\n */\nexport function sequential(config?: SequentialArgs): Sequential {\n  return new Sequential(config);\n}\n\n/**\n * Used to instantiate an input to a model as a `tf.SymbolicTensor`.\n *\n * Users should call the `input` factory function for\n * consistency with other generator functions.\n *\n * Example:\n *\n * ```js\n * // Defines a simple logistic regression model with 32 dimensional input\n * // and 3 dimensional output.\n * const x = tf.input({shape: [32]});\n * const y = tf.layers.dense({units: 3, activation: 'softmax'}).apply(x);\n * const model = tf.model({inputs: x, outputs: y});\n * model.predict(tf.ones([2, 32])).print();\n * ```\n *\n * Note: `input` is only necessary when using `model`. When using\n * `sequential`, specify `inputShape` for the first layer or use `inputLayer`\n * as the first layer.\n *\n * @doc {heading: 'Models', subheading: 'Inputs'}\n */\nexport function input(config: InputConfig): SymbolicTensor {\n  return Input(config);\n}\n\nexport function registerCallbackConstructor(\n    verbosityLevel: number,\n    callbackConstructor: BaseCallbackConstructor): void {\n  CallbackConstructorRegistry.registerCallbackConstructor(\n      verbosityLevel, callbackConstructor);\n}\n"},"lineCount":null}},"error":null,"hash":"f700baaad33e4ced277b47956fd58146","cacheData":{"env":{}}}